//--------------------------------------------------------------------
//Class:	TThread
//Author: 	Vasiliy S. Barayshchuk
//--------------------------------------------------------------------
// Первая попытка создания объекта потока в стиле VCL под Linux
// на сей момент далеко не все реализовано, постараюсь добить позже
// Особенности:
// 1. не нашел как под Linux приостанавливать потоки и соответственно
// возобнавлять их работу. Поэтому Resume() будет работать, если объект
// был создан с флагом CreateSuspended == false.
//--------------------------------------------------------------------
#ifndef BVS_THREAD_HPP
#define BVS_THREAD_HPP
//--------------------------------------------------------------------
#include <pthread.h>
//--------------------------------------------------------------------
class TThread
{
  public:
    //---------------------------------------------------------------- 
    //конструкторы и деструкторы
    //---------------------------------------------------------------- 
    TThread(bool CreateSuspended);
    ~TThread();
    //---------------------------------------------------------------- 
    //Собственно метод осуществляющий функцию потока
    //---------------------------------------------------------------- 
    virtual void Execute() = 0;
    //---------------------------------------------------------------- 
    //Управление потоком
    //---------------------------------------------------------------- 
	void Terminate();
	void Resume();
	int WaitFor();
    //---------------------------------------------------------------- 
    //Свойства
    //---------------------------------------------------------------- 
//  __property int ReturnValue = {read=FReturnValue, write=FReturnValue, nodefault};
//	__property bool Suspended = {read=FSuspended, nodefault};
//	__property bool Terminated = {read=FTerminated, nodefault};
    
//  protected:
    bool Terminated;
	bool Suspended;
	int ReturnValue;
  //private:
	pthread_t Fpt;
};
//--------------------------------------------------------------------
#endif
