// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: p347_conf.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "p347_conf.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace p347_conf {

namespace {

const ::google::protobuf::Descriptor* MapElement_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MapElement_reflection_ = NULL;
const ::google::protobuf::Descriptor* ObjectMap_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObjectMap_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeviceInitParams_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeviceInitParams_reflection_ = NULL;
const ::google::protobuf::Descriptor* DefaultDSPEmulParamsPack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DefaultDSPEmulParamsPack_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServerConfPack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerConfPack_reflection_ = NULL;
const ::google::protobuf::Descriptor* DotConf_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DotConf_reflection_ = NULL;
const ::google::protobuf::Descriptor* DotGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DotGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* DotChain_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DotChain_reflection_ = NULL;
const ::google::protobuf::Descriptor* KdrInParams_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KdrInParams_reflection_ = NULL;
const ::google::protobuf::Descriptor* DotVibro_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DotVibro_reflection_ = NULL;
const ::google::protobuf::Descriptor* DotRot_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DotRot_reflection_ = NULL;
const ::google::protobuf::Descriptor* DotPress_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DotPress_reflection_ = NULL;
const ::google::protobuf::Descriptor* DotTemp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DotTemp_reflection_ = NULL;
const ::google::protobuf::Descriptor* WorkConfiguration_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WorkConfiguration_reflection_ = NULL;
const ::google::protobuf::Descriptor* Bearing_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Bearing_reflection_ = NULL;
const ::google::protobuf::Descriptor* Reducer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Reducer_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReducerList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReducerList_reflection_ = NULL;
const ::google::protobuf::Descriptor* BearingList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BearingList_reflection_ = NULL;
const ::google::protobuf::Descriptor* FrqTab_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FrqTab_reflection_ = NULL;
const ::google::protobuf::Descriptor* SpLevel_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SpLevel_reflection_ = NULL;
const ::google::protobuf::Descriptor* MNTRLevels_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MNTRLevels_reflection_ = NULL;
const ::google::protobuf::Descriptor* PorogDirData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PorogDirData_reflection_ = NULL;
const ::google::protobuf::Descriptor* EnvEtalon_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EnvEtalon_reflection_ = NULL;
const ::google::protobuf::Descriptor* DirEtalon_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DirEtalon_reflection_ = NULL;
const ::google::protobuf::Descriptor* KdrEtalonData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KdrEtalonData_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_p347_5fconf_2eproto() {
  protobuf_AddDesc_p347_5fconf_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "p347_conf.proto");
  GOOGLE_CHECK(file != NULL);
  MapElement_descriptor_ = file->message_type(0);
  static const int MapElement_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapElement, poi_idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapElement, dot_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapElement, poi_name_),
  };
  MapElement_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MapElement_descriptor_,
      MapElement::default_instance_,
      MapElement_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapElement, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapElement, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MapElement));
  ObjectMap_descriptor_ = file->message_type(1);
  static const int ObjectMap_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectMap, map_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectMap, object_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectMap, object_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectMap, poi_list_),
  };
  ObjectMap_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ObjectMap_descriptor_,
      ObjectMap::default_instance_,
      ObjectMap_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectMap, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectMap, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ObjectMap));
  DeviceInitParams_descriptor_ = file->message_type(2);
  static const int DeviceInitParams_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceInitParams, cm_init_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceInitParams, mux_init_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceInitParams, dspemul_init_),
  };
  DeviceInitParams_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeviceInitParams_descriptor_,
      DeviceInitParams::default_instance_,
      DeviceInitParams_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceInitParams, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceInitParams, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeviceInitParams));
  DefaultDSPEmulParamsPack_descriptor_ = file->message_type(3);
  static const int DefaultDSPEmulParamsPack_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultDSPEmulParamsPack, emu_idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultDSPEmulParamsPack, abegsigoffset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultDSPEmulParamsPack, arotmetkasfromsig_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultDSPEmulParamsPack, abegrotoffset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultDSPEmulParamsPack, asrcsamplingfreq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultDSPEmulParamsPack, again_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultDSPEmulParamsPack, asensitivity_),
  };
  DefaultDSPEmulParamsPack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DefaultDSPEmulParamsPack_descriptor_,
      DefaultDSPEmulParamsPack::default_instance_,
      DefaultDSPEmulParamsPack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultDSPEmulParamsPack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DefaultDSPEmulParamsPack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DefaultDSPEmulParamsPack));
  ServerConfPack_descriptor_ = file->message_type(4);
  static const int ServerConfPack_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfPack, cm_init_conf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfPack, mux_init_conf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfPack, dspemul_init_conf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfPack, dspemul_params_conf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfPack, sync_reg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfPack, adc_init_conf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfPack, rot_init_conf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfPack, reg_settings_for_warm_),
  };
  ServerConfPack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServerConfPack_descriptor_,
      ServerConfPack::default_instance_,
      ServerConfPack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfPack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConfPack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServerConfPack));
  DotConf_descriptor_ = file->message_type(5);
  static const int DotConf_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotConf, poi_idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotConf, dot_vibro_idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotConf, dot_rot_idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotConf, dot_press_idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotConf, dot_temp_idx_),
  };
  DotConf_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DotConf_descriptor_,
      DotConf::default_instance_,
      DotConf_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotConf, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotConf, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DotConf));
  DotGroup_descriptor_ = file->message_type(6);
  static const int DotGroup_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotGroup, group_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotGroup, dot_configs_),
  };
  DotGroup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DotGroup_descriptor_,
      DotGroup::default_instance_,
      DotGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotGroup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotGroup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DotGroup));
  DotChain_descriptor_ = file->message_type(7);
  static const int DotChain_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotChain, chain_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotChain, dot_groups_),
  };
  DotChain_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DotChain_descriptor_,
      DotChain::default_instance_,
      DotChain_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotChain, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotChain, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DotChain));
  KdrInParams_descriptor_ = file->message_type(8);
  static const int KdrInParams_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KdrInParams, typepoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KdrInParams, drive_p_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KdrInParams, drive_z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KdrInParams, drive_c_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KdrInParams, resursworkbearing_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KdrInParams, main_bearing_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KdrInParams, pair_bearing_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KdrInParams, reducer_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KdrInParams, env_porog_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KdrInParams, dir_porog_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KdrInParams, kurtosisporog_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KdrInParams, errorfrot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KdrInParams, maxerrorfrot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KdrInParams, koeffrotation_),
  };
  KdrInParams_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      KdrInParams_descriptor_,
      KdrInParams::default_instance_,
      KdrInParams_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KdrInParams, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KdrInParams, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(KdrInParams));
  DotVibro_descriptor_ = file->message_type(9);
  static const int DotVibro_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotVibro, dot_idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotVibro, rot_poi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotVibro, task_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotVibro, beg_sig_offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotVibro, beg_rot_offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotVibro, vibeg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotVibro, kdr_inparams_),
  };
  DotVibro_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DotVibro_descriptor_,
      DotVibro::default_instance_,
      DotVibro_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotVibro, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotVibro, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DotVibro));
  DotRot_descriptor_ = file->message_type(10);
  static const int DotRot_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotRot, dot_idx_),
  };
  DotRot_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DotRot_descriptor_,
      DotRot::default_instance_,
      DotRot_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotRot, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotRot, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DotRot));
  DotPress_descriptor_ = file->message_type(11);
  static const int DotPress_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotPress, dot_idx_),
  };
  DotPress_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DotPress_descriptor_,
      DotPress::default_instance_,
      DotPress_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotPress, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotPress, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DotPress));
  DotTemp_descriptor_ = file->message_type(12);
  static const int DotTemp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotTemp, dot_idx_),
  };
  DotTemp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DotTemp_descriptor_,
      DotTemp::default_instance_,
      DotTemp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotTemp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DotTemp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DotTemp));
  WorkConfiguration_descriptor_ = file->message_type(13);
  static const int WorkConfiguration_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkConfiguration, conf_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkConfiguration, object_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkConfiguration, object_map_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkConfiguration, dot_chains_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkConfiguration, dots_vibro_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkConfiguration, dots_rot_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkConfiguration, dots_press_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkConfiguration, dots_temp_list_),
  };
  WorkConfiguration_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WorkConfiguration_descriptor_,
      WorkConfiguration::default_instance_,
      WorkConfiguration_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkConfiguration, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkConfiguration, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WorkConfiguration));
  Bearing_descriptor_ = file->message_type(14);
  static const int Bearing_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bearing, bearing_idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bearing, bearing_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bearing, din_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bearing, dout_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bearing, angl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bearing, drol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bearing, nrol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bearing, dnrol_),
  };
  Bearing_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Bearing_descriptor_,
      Bearing::default_instance_,
      Bearing_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bearing, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bearing, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Bearing));
  Reducer_descriptor_ = file->message_type(15);
  static const int Reducer_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reducer, reducer_idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reducer, reducer_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reducer, axis_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reducer, z12_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reducer, z21_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reducer, z23_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reducer, z32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reducer, z34_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reducer, z43_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reducer, z45_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reducer, z54_),
  };
  Reducer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Reducer_descriptor_,
      Reducer::default_instance_,
      Reducer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reducer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reducer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Reducer));
  ReducerList_descriptor_ = file->message_type(16);
  static const int ReducerList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReducerList, rd_),
  };
  ReducerList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReducerList_descriptor_,
      ReducerList::default_instance_,
      ReducerList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReducerList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReducerList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReducerList));
  BearingList_descriptor_ = file->message_type(17);
  static const int BearingList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BearingList, br_),
  };
  BearingList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BearingList_descriptor_,
      BearingList::default_instance_,
      BearingList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BearingList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BearingList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BearingList));
  FrqTab_descriptor_ = file->message_type(18);
  static const int FrqTab_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrqTab, l_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrqTab, r_),
  };
  FrqTab_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FrqTab_descriptor_,
      FrqTab::default_instance_,
      FrqTab_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrqTab, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrqTab, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FrqTab));
  SpLevel_descriptor_ = file->message_type(19);
  static const int SpLevel_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpLevel, lv_),
  };
  SpLevel_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SpLevel_descriptor_,
      SpLevel::default_instance_,
      SpLevel_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpLevel, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpLevel, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SpLevel));
  MNTRLevels_descriptor_ = file->message_type(20);
  static const int MNTRLevels_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MNTRLevels, nch_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MNTRLevels, freq_tab_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MNTRLevels, sp_levels_),
  };
  MNTRLevels_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MNTRLevels_descriptor_,
      MNTRLevels::default_instance_,
      MNTRLevels_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MNTRLevels, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MNTRLevels, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MNTRLevels));
  PorogDirData_descriptor_ = file->message_type(21);
  static const int PorogDirData_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PorogDirData, mpgroup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PorogDirData, dirnline_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PorogDirData, dirfs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PorogDirData, m_levels_),
  };
  PorogDirData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PorogDirData_descriptor_,
      PorogDirData::default_instance_,
      PorogDirData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PorogDirData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PorogDirData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PorogDirData));
  EnvEtalon_descriptor_ = file->message_type(22);
  static const int EnvEtalon_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvEtalon, firstlinemo_),
  };
  EnvEtalon_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EnvEtalon_descriptor_,
      EnvEtalon::default_instance_,
      EnvEtalon_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvEtalon, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvEtalon, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EnvEtalon));
  DirEtalon_descriptor_ = file->message_type(23);
  static const int DirEtalon_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DirEtalon, nmidlvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DirEtalon, nbeginmidlesp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DirEtalon, countmidlesp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DirEtalon, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DirEtalon, levelopt_),
  };
  DirEtalon_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DirEtalon_descriptor_,
      DirEtalon::default_instance_,
      DirEtalon_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DirEtalon, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DirEtalon, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DirEtalon));
  KdrEtalonData_descriptor_ = file->message_type(24);
  static const int KdrEtalonData_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KdrEtalonData, size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KdrEtalonData, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KdrEtalonData, mptype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KdrEtalonData, mpsubtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KdrEtalonData, dir_etalon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KdrEtalonData, env_etalon_),
  };
  KdrEtalonData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      KdrEtalonData_descriptor_,
      KdrEtalonData::default_instance_,
      KdrEtalonData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KdrEtalonData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KdrEtalonData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(KdrEtalonData));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_p347_5fconf_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MapElement_descriptor_, &MapElement::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ObjectMap_descriptor_, &ObjectMap::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeviceInitParams_descriptor_, &DeviceInitParams::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DefaultDSPEmulParamsPack_descriptor_, &DefaultDSPEmulParamsPack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServerConfPack_descriptor_, &ServerConfPack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DotConf_descriptor_, &DotConf::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DotGroup_descriptor_, &DotGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DotChain_descriptor_, &DotChain::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    KdrInParams_descriptor_, &KdrInParams::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DotVibro_descriptor_, &DotVibro::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DotRot_descriptor_, &DotRot::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DotPress_descriptor_, &DotPress::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DotTemp_descriptor_, &DotTemp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WorkConfiguration_descriptor_, &WorkConfiguration::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Bearing_descriptor_, &Bearing::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Reducer_descriptor_, &Reducer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReducerList_descriptor_, &ReducerList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BearingList_descriptor_, &BearingList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FrqTab_descriptor_, &FrqTab::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SpLevel_descriptor_, &SpLevel::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MNTRLevels_descriptor_, &MNTRLevels::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PorogDirData_descriptor_, &PorogDirData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EnvEtalon_descriptor_, &EnvEtalon::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DirEtalon_descriptor_, &DirEtalon::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    KdrEtalonData_descriptor_, &KdrEtalonData::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_p347_5fconf_2eproto() {
  delete MapElement::default_instance_;
  delete MapElement_reflection_;
  delete ObjectMap::default_instance_;
  delete ObjectMap_reflection_;
  delete DeviceInitParams::default_instance_;
  delete DeviceInitParams_reflection_;
  delete DefaultDSPEmulParamsPack::default_instance_;
  delete DefaultDSPEmulParamsPack_reflection_;
  delete ServerConfPack::default_instance_;
  delete ServerConfPack_reflection_;
  delete DotConf::default_instance_;
  delete DotConf_reflection_;
  delete DotGroup::default_instance_;
  delete DotGroup_reflection_;
  delete DotChain::default_instance_;
  delete DotChain_reflection_;
  delete KdrInParams::default_instance_;
  delete KdrInParams_reflection_;
  delete DotVibro::default_instance_;
  delete DotVibro_reflection_;
  delete DotRot::default_instance_;
  delete DotRot_reflection_;
  delete DotPress::default_instance_;
  delete DotPress_reflection_;
  delete DotTemp::default_instance_;
  delete DotTemp_reflection_;
  delete WorkConfiguration::default_instance_;
  delete WorkConfiguration_reflection_;
  delete Bearing::default_instance_;
  delete Bearing_reflection_;
  delete Reducer::default_instance_;
  delete Reducer_reflection_;
  delete ReducerList::default_instance_;
  delete ReducerList_reflection_;
  delete BearingList::default_instance_;
  delete BearingList_reflection_;
  delete FrqTab::default_instance_;
  delete FrqTab_reflection_;
  delete SpLevel::default_instance_;
  delete SpLevel_reflection_;
  delete MNTRLevels::default_instance_;
  delete MNTRLevels_reflection_;
  delete PorogDirData::default_instance_;
  delete PorogDirData_reflection_;
  delete EnvEtalon::default_instance_;
  delete EnvEtalon_reflection_;
  delete DirEtalon::default_instance_;
  delete DirEtalon_reflection_;
  delete KdrEtalonData::default_instance_;
  delete KdrEtalonData_reflection_;
}

void protobuf_AddDesc_p347_5fconf_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::channel_manager::protobuf_AddDesc_channel_5fmanager_2eproto();
  ::task_manager::protobuf_AddDesc_task_5fmanager_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017p347_conf.proto\022\tp347_conf\032\025channel_ma"
    "nager.proto\032\022task_manager.proto\"A\n\nMapEl"
    "ement\022\017\n\007poi_idx\030\001 \002(\r\022\020\n\010dot_type\030\002 \002(\r"
    "\022\020\n\010poi_name\030\003 \002(\t\"n\n\tObjectMap\022\016\n\006map_i"
    "d\030\001 \002(\r\022\023\n\013object_type\030\002 \002(\r\022\023\n\013object_n"
    "ame\030\003 \002(\t\022\'\n\010poi_list\030\004 \003(\0132\025.p347_conf."
    "MapElement\"\277\001\n\020DeviceInitParams\022:\n\007cm_in"
    "it\030\001 \001(\0132).channel_manager.ChannelManage"
    "rInitParams\0228\n\010mux_init\030\002 \001(\0132&.channel_"
    "manager.MultiplexerInitParams\0225\n\014dspemul"
    "_init\030\003 \001(\0132\037.task_manager.DSPEmulInitPa"
    "rams\"\263\001\n\030DefaultDSPEmulParamsPack\022\017\n\007emu"
    "_idx\030\001 \002(\r\022\025\n\rABegSigOffSet\030\002 \002(\r\022\031\n\021ARo"
    "tMetkasFromSig\030\003 \002(\010\022\025\n\rABegRotOffSet\030\004 "
    "\002(\r\022\030\n\020ASrcSamplingFreq\030\005 \002(\r\022\r\n\005AGain\030\006"
    " \002(\001\022\024\n\014ASensitivity\030\007 \002(\001\"\273\003\n\016ServerCon"
    "fPack\022\?\n\014cm_init_conf\030\001 \001(\0132).channel_ma"
    "nager.ChannelManagerInitParams\022=\n\rmux_in"
    "it_conf\030\002 \001(\0132&.channel_manager.Multiple"
    "xerInitParams\022:\n\021dspemul_init_conf\030\003 \001(\013"
    "2\037.task_manager.DSPEmulInitParams\022@\n\023dsp"
    "emul_params_conf\030\004 \003(\0132#.p347_conf.Defau"
    "ltDSPEmulParamsPack\022\020\n\010sync_reg\030\005 \001(\r\022<\n"
    "\radc_init_conf\030\006 \003(\0132%.channel_manager.A"
    "DCChannelInitParams\022<\n\rrot_init_conf\030\007 \003"
    "(\0132%.channel_manager.RotChannelInitParam"
    "s\022\035\n\025reg_settings_for_warm\030\010 \001(\r\"s\n\007DotC"
    "onf\022\017\n\007poi_idx\030\001 \002(\r\022\025\n\rdot_vibro_idx\030\002 "
    "\001(\r\022\023\n\013dot_rot_idx\030\003 \001(\r\022\025\n\rdot_press_id"
    "x\030\004 \001(\r\022\024\n\014dot_temp_idx\030\005 \001(\r\"G\n\010DotGrou"
    "p\022\022\n\ngroup_name\030\001 \002(\t\022\'\n\013dot_configs\030\002 \003"
    "(\0132\022.p347_conf.DotConf\"G\n\010DotChain\022\022\n\nch"
    "ain_name\030\001 \002(\t\022\'\n\ndot_groups\030\002 \003(\0132\023.p34"
    "7_conf.DotGroup\"\261\002\n\013KdrInParams\022\021\n\ttypep"
    "oint\030\001 \002(\r\022\017\n\007drive_p\030\002 \001(\r\022\017\n\007drive_z\030\003"
    " \001(\r\022\017\n\007drive_c\030\004 \001(\r\022\031\n\021resursworkbeari"
    "ng\030\005 \002(\r\022\027\n\017main_bearing_id\030\006 \002(\r\022\027\n\017pai"
    "r_bearing_id\030\007 \002(\r\022\022\n\nreducer_id\030\010 \002(\r\022\021"
    "\n\tenv_porog\030\t \003(\r\022\021\n\tdir_porog\030\n \003(\r\022\025\n\r"
    "kurtosisporog\030\013 \002(\001\022\021\n\terrorfrot\030\014 \002(\001\022\024"
    "\n\014maxerrorfrot\030\r \002(\001\022\025\n\rkoeffrotation\030\016 "
    "\002(\001\"\311\001\n\010DotVibro\022\017\n\007dot_idx\030\001 \002(\r\022\017\n\007rot"
    "_poi\030\002 \001(\r\022.\n\ttask_list\030\003 \003(\0132\033.task_man"
    "ager.AnyTaskParams\022\026\n\016beg_sig_offset\030\004 \002"
    "(\r\022\026\n\016beg_rot_offset\030\005 \002(\r\022\r\n\005vibeg\030\006 \002("
    "\010\022,\n\014kdr_inparams\030\007 \002(\0132\026.p347_conf.KdrI"
    "nParams\"\031\n\006DotRot\022\017\n\007dot_idx\030\001 \002(\r\"\033\n\010Do"
    "tPress\022\017\n\007dot_idx\030\001 \002(\r\"\032\n\007DotTemp\022\017\n\007do"
    "t_idx\030\001 \002(\r\"\276\002\n\021WorkConfiguration\022\017\n\007con"
    "f_id\030\001 \002(\r\022\023\n\013object_type\030\002 \002(\r\022(\n\nobjec"
    "t_map\030\003 \002(\0132\024.p347_conf.ObjectMap\022\'\n\ndot"
    "_chains\030\005 \003(\0132\023.p347_conf.DotChain\022,\n\017do"
    "ts_vibro_list\030\006 \003(\0132\023.p347_conf.DotVibro"
    "\022(\n\rdots_rot_list\030\007 \003(\0132\021.p347_conf.DotR"
    "ot\022,\n\017dots_press_list\030\010 \003(\0132\023.p347_conf."
    "DotPress\022*\n\016dots_temp_list\030\t \003(\0132\022.p347_"
    "conf.DotTemp\"\210\001\n\007Bearing\022\023\n\013bearing_idx\030"
    "\001 \002(\r\022\024\n\014bearing_name\030\002 \002(\t\022\013\n\003din\030\003 \002(\001"
    "\022\014\n\004dout\030\004 \002(\001\022\014\n\004angl\030\005 \002(\001\022\014\n\004drol\030\006 \002"
    "(\001\022\014\n\004nrol\030\007 \002(\r\022\r\n\005dnrol\030\010 \002(\r\"\252\001\n\007Redu"
    "cer\022\023\n\013reducer_idx\030\001 \002(\r\022\024\n\014reducer_name"
    "\030\002 \002(\t\022\014\n\004axis\030\003 \002(\r\022\013\n\003z12\030\004 \002(\r\022\013\n\003z21"
    "\030\005 \002(\r\022\013\n\003z23\030\006 \002(\r\022\013\n\003z32\030\007 \002(\r\022\013\n\003z34\030"
    "\010 \002(\r\022\013\n\003z43\030\t \002(\r\022\013\n\003z45\030\n \002(\r\022\013\n\003z54\030\013"
    " \002(\r\"-\n\013ReducerList\022\036\n\002rd\030\001 \003(\0132\022.p347_c"
    "onf.Reducer\"-\n\013BearingList\022\036\n\002br\030\001 \003(\0132\022"
    ".p347_conf.Bearing\"\036\n\006FrqTab\022\t\n\001L\030\001 \002(\r\022"
    "\t\n\001R\030\002 \002(\r\"\025\n\007SpLevel\022\n\n\002lv\030\001 \003(\001\"e\n\nMNT"
    "RLevels\022\013\n\003nch\030\001 \002(\r\022#\n\010freq_tab\030\002 \003(\0132\021"
    ".p347_conf.FrqTab\022%\n\tsp_levels\030\003 \003(\0132\022.p"
    "347_conf.SpLevel\"i\n\014PorogDirData\022\017\n\007mpgr"
    "oup\030\001 \002(\r\022\020\n\010dirnline\030\002 \002(\r\022\r\n\005dirfs\030\003 \002"
    "(\001\022\'\n\010m_levels\030\004 \002(\0132\025.p347_conf.MNTRLev"
    "els\" \n\tEnvEtalon\022\023\n\013FirstLineMO\030\001 \002(\001\"u\n"
    "\tDirEtalon\022\022\n\nnMidlValue\030\001 \002(\r\022\025\n\rnBegin"
    "MidleSp\030\002 \002(\r\022\024\n\014CountMidleSp\030\003 \002(\r\022\021\n\005l"
    "evel\030\004 \003(\001B\002\020\001\022\024\n\010levelOpt\030\005 \003(\rB\002\020\001\"\245\001\n"
    "\rKdrEtalonData\022\014\n\004SIZE\030\001 \002(\r\022\017\n\007version\030"
    "\002 \002(\r\022\016\n\006mpType\030\003 \002(\r\022\021\n\tmpSubType\030\004 \002(\r"
    "\022(\n\ndir_etalon\030\005 \002(\0132\024.p347_conf.DirEtal"
    "on\022(\n\nenv_etalon\030\006 \002(\0132\024.p347_conf.EnvEt"
    "alon", 3244);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "p347_conf.proto", &protobuf_RegisterTypes);
  MapElement::default_instance_ = new MapElement();
  ObjectMap::default_instance_ = new ObjectMap();
  DeviceInitParams::default_instance_ = new DeviceInitParams();
  DefaultDSPEmulParamsPack::default_instance_ = new DefaultDSPEmulParamsPack();
  ServerConfPack::default_instance_ = new ServerConfPack();
  DotConf::default_instance_ = new DotConf();
  DotGroup::default_instance_ = new DotGroup();
  DotChain::default_instance_ = new DotChain();
  KdrInParams::default_instance_ = new KdrInParams();
  DotVibro::default_instance_ = new DotVibro();
  DotRot::default_instance_ = new DotRot();
  DotPress::default_instance_ = new DotPress();
  DotTemp::default_instance_ = new DotTemp();
  WorkConfiguration::default_instance_ = new WorkConfiguration();
  Bearing::default_instance_ = new Bearing();
  Reducer::default_instance_ = new Reducer();
  ReducerList::default_instance_ = new ReducerList();
  BearingList::default_instance_ = new BearingList();
  FrqTab::default_instance_ = new FrqTab();
  SpLevel::default_instance_ = new SpLevel();
  MNTRLevels::default_instance_ = new MNTRLevels();
  PorogDirData::default_instance_ = new PorogDirData();
  EnvEtalon::default_instance_ = new EnvEtalon();
  DirEtalon::default_instance_ = new DirEtalon();
  KdrEtalonData::default_instance_ = new KdrEtalonData();
  MapElement::default_instance_->InitAsDefaultInstance();
  ObjectMap::default_instance_->InitAsDefaultInstance();
  DeviceInitParams::default_instance_->InitAsDefaultInstance();
  DefaultDSPEmulParamsPack::default_instance_->InitAsDefaultInstance();
  ServerConfPack::default_instance_->InitAsDefaultInstance();
  DotConf::default_instance_->InitAsDefaultInstance();
  DotGroup::default_instance_->InitAsDefaultInstance();
  DotChain::default_instance_->InitAsDefaultInstance();
  KdrInParams::default_instance_->InitAsDefaultInstance();
  DotVibro::default_instance_->InitAsDefaultInstance();
  DotRot::default_instance_->InitAsDefaultInstance();
  DotPress::default_instance_->InitAsDefaultInstance();
  DotTemp::default_instance_->InitAsDefaultInstance();
  WorkConfiguration::default_instance_->InitAsDefaultInstance();
  Bearing::default_instance_->InitAsDefaultInstance();
  Reducer::default_instance_->InitAsDefaultInstance();
  ReducerList::default_instance_->InitAsDefaultInstance();
  BearingList::default_instance_->InitAsDefaultInstance();
  FrqTab::default_instance_->InitAsDefaultInstance();
  SpLevel::default_instance_->InitAsDefaultInstance();
  MNTRLevels::default_instance_->InitAsDefaultInstance();
  PorogDirData::default_instance_->InitAsDefaultInstance();
  EnvEtalon::default_instance_->InitAsDefaultInstance();
  DirEtalon::default_instance_->InitAsDefaultInstance();
  KdrEtalonData::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_p347_5fconf_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_p347_5fconf_2eproto {
  StaticDescriptorInitializer_p347_5fconf_2eproto() {
    protobuf_AddDesc_p347_5fconf_2eproto();
  }
} static_descriptor_initializer_p347_5fconf_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int MapElement::kPoiIdxFieldNumber;
const int MapElement::kDotTypeFieldNumber;
const int MapElement::kPoiNameFieldNumber;
#endif  // !_MSC_VER

MapElement::MapElement()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:p347_conf.MapElement)
}

void MapElement::InitAsDefaultInstance() {
}

MapElement::MapElement(const MapElement& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:p347_conf.MapElement)
}

void MapElement::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  poi_idx_ = 0u;
  dot_type_ = 0u;
  poi_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MapElement::~MapElement() {
  // @@protoc_insertion_point(destructor:p347_conf.MapElement)
  SharedDtor();
}

void MapElement::SharedDtor() {
  if (poi_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete poi_name_;
  }
  if (this != default_instance_) {
  }
}

void MapElement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MapElement::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MapElement_descriptor_;
}

const MapElement& MapElement::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_p347_5fconf_2eproto();
  return *default_instance_;
}

MapElement* MapElement::default_instance_ = NULL;

MapElement* MapElement::New() const {
  return new MapElement;
}

void MapElement::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MapElement*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(poi_idx_, dot_type_);
    if (has_poi_name()) {
      if (poi_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        poi_name_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MapElement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p347_conf.MapElement)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 poi_idx = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &poi_idx_)));
          set_has_poi_idx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_dot_type;
        break;
      }

      // required uint32 dot_type = 2;
      case 2: {
        if (tag == 16) {
         parse_dot_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dot_type_)));
          set_has_dot_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_poi_name;
        break;
      }

      // required string poi_name = 3;
      case 3: {
        if (tag == 26) {
         parse_poi_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_poi_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->poi_name().data(), this->poi_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "poi_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p347_conf.MapElement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p347_conf.MapElement)
  return false;
#undef DO_
}

void MapElement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p347_conf.MapElement)
  // required uint32 poi_idx = 1;
  if (has_poi_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->poi_idx(), output);
  }

  // required uint32 dot_type = 2;
  if (has_dot_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dot_type(), output);
  }

  // required string poi_name = 3;
  if (has_poi_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->poi_name().data(), this->poi_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "poi_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->poi_name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:p347_conf.MapElement)
}

::google::protobuf::uint8* MapElement::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:p347_conf.MapElement)
  // required uint32 poi_idx = 1;
  if (has_poi_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->poi_idx(), target);
  }

  // required uint32 dot_type = 2;
  if (has_dot_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dot_type(), target);
  }

  // required string poi_name = 3;
  if (has_poi_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->poi_name().data(), this->poi_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "poi_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->poi_name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p347_conf.MapElement)
  return target;
}

int MapElement::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 poi_idx = 1;
    if (has_poi_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->poi_idx());
    }

    // required uint32 dot_type = 2;
    if (has_dot_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dot_type());
    }

    // required string poi_name = 3;
    if (has_poi_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->poi_name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MapElement::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MapElement* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MapElement*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MapElement::MergeFrom(const MapElement& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_poi_idx()) {
      set_poi_idx(from.poi_idx());
    }
    if (from.has_dot_type()) {
      set_dot_type(from.dot_type());
    }
    if (from.has_poi_name()) {
      set_poi_name(from.poi_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MapElement::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapElement::CopyFrom(const MapElement& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapElement::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void MapElement::Swap(MapElement* other) {
  if (other != this) {
    std::swap(poi_idx_, other->poi_idx_);
    std::swap(dot_type_, other->dot_type_);
    std::swap(poi_name_, other->poi_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MapElement::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MapElement_descriptor_;
  metadata.reflection = MapElement_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ObjectMap::kMapIdFieldNumber;
const int ObjectMap::kObjectTypeFieldNumber;
const int ObjectMap::kObjectNameFieldNumber;
const int ObjectMap::kPoiListFieldNumber;
#endif  // !_MSC_VER

ObjectMap::ObjectMap()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:p347_conf.ObjectMap)
}

void ObjectMap::InitAsDefaultInstance() {
}

ObjectMap::ObjectMap(const ObjectMap& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:p347_conf.ObjectMap)
}

void ObjectMap::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  map_id_ = 0u;
  object_type_ = 0u;
  object_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ObjectMap::~ObjectMap() {
  // @@protoc_insertion_point(destructor:p347_conf.ObjectMap)
  SharedDtor();
}

void ObjectMap::SharedDtor() {
  if (object_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete object_name_;
  }
  if (this != default_instance_) {
  }
}

void ObjectMap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectMap::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObjectMap_descriptor_;
}

const ObjectMap& ObjectMap::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_p347_5fconf_2eproto();
  return *default_instance_;
}

ObjectMap* ObjectMap::default_instance_ = NULL;

ObjectMap* ObjectMap::New() const {
  return new ObjectMap;
}

void ObjectMap::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ObjectMap*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(map_id_, object_type_);
    if (has_object_name()) {
      if (object_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        object_name_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  poi_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ObjectMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p347_conf.ObjectMap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 map_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &map_id_)));
          set_has_map_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_object_type;
        break;
      }

      // required uint32 object_type = 2;
      case 2: {
        if (tag == 16) {
         parse_object_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &object_type_)));
          set_has_object_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_object_name;
        break;
      }

      // required string object_name = 3;
      case 3: {
        if (tag == 26) {
         parse_object_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->object_name().data(), this->object_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "object_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_poi_list;
        break;
      }

      // repeated .p347_conf.MapElement poi_list = 4;
      case 4: {
        if (tag == 34) {
         parse_poi_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_poi_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_poi_list;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p347_conf.ObjectMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p347_conf.ObjectMap)
  return false;
#undef DO_
}

void ObjectMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p347_conf.ObjectMap)
  // required uint32 map_id = 1;
  if (has_map_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->map_id(), output);
  }

  // required uint32 object_type = 2;
  if (has_object_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->object_type(), output);
  }

  // required string object_name = 3;
  if (has_object_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->object_name().data(), this->object_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "object_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->object_name(), output);
  }

  // repeated .p347_conf.MapElement poi_list = 4;
  for (int i = 0; i < this->poi_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->poi_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:p347_conf.ObjectMap)
}

::google::protobuf::uint8* ObjectMap::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:p347_conf.ObjectMap)
  // required uint32 map_id = 1;
  if (has_map_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->map_id(), target);
  }

  // required uint32 object_type = 2;
  if (has_object_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->object_type(), target);
  }

  // required string object_name = 3;
  if (has_object_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->object_name().data(), this->object_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "object_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->object_name(), target);
  }

  // repeated .p347_conf.MapElement poi_list = 4;
  for (int i = 0; i < this->poi_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->poi_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p347_conf.ObjectMap)
  return target;
}

int ObjectMap::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 map_id = 1;
    if (has_map_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->map_id());
    }

    // required uint32 object_type = 2;
    if (has_object_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->object_type());
    }

    // required string object_name = 3;
    if (has_object_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->object_name());
    }

  }
  // repeated .p347_conf.MapElement poi_list = 4;
  total_size += 1 * this->poi_list_size();
  for (int i = 0; i < this->poi_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->poi_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectMap::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ObjectMap* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ObjectMap*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ObjectMap::MergeFrom(const ObjectMap& from) {
  GOOGLE_CHECK_NE(&from, this);
  poi_list_.MergeFrom(from.poi_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_map_id()) {
      set_map_id(from.map_id());
    }
    if (from.has_object_type()) {
      set_object_type(from.object_type());
    }
    if (from.has_object_name()) {
      set_object_name(from.object_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ObjectMap::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectMap::CopyFrom(const ObjectMap& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectMap::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->poi_list())) return false;
  return true;
}

void ObjectMap::Swap(ObjectMap* other) {
  if (other != this) {
    std::swap(map_id_, other->map_id_);
    std::swap(object_type_, other->object_type_);
    std::swap(object_name_, other->object_name_);
    poi_list_.Swap(&other->poi_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ObjectMap::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObjectMap_descriptor_;
  metadata.reflection = ObjectMap_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeviceInitParams::kCmInitFieldNumber;
const int DeviceInitParams::kMuxInitFieldNumber;
const int DeviceInitParams::kDspemulInitFieldNumber;
#endif  // !_MSC_VER

DeviceInitParams::DeviceInitParams()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:p347_conf.DeviceInitParams)
}

void DeviceInitParams::InitAsDefaultInstance() {
  cm_init_ = const_cast< ::channel_manager::ChannelManagerInitParams*>(&::channel_manager::ChannelManagerInitParams::default_instance());
  mux_init_ = const_cast< ::channel_manager::MultiplexerInitParams*>(&::channel_manager::MultiplexerInitParams::default_instance());
  dspemul_init_ = const_cast< ::task_manager::DSPEmulInitParams*>(&::task_manager::DSPEmulInitParams::default_instance());
}

DeviceInitParams::DeviceInitParams(const DeviceInitParams& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:p347_conf.DeviceInitParams)
}

void DeviceInitParams::SharedCtor() {
  _cached_size_ = 0;
  cm_init_ = NULL;
  mux_init_ = NULL;
  dspemul_init_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeviceInitParams::~DeviceInitParams() {
  // @@protoc_insertion_point(destructor:p347_conf.DeviceInitParams)
  SharedDtor();
}

void DeviceInitParams::SharedDtor() {
  if (this != default_instance_) {
    delete cm_init_;
    delete mux_init_;
    delete dspemul_init_;
  }
}

void DeviceInitParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceInitParams::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeviceInitParams_descriptor_;
}

const DeviceInitParams& DeviceInitParams::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_p347_5fconf_2eproto();
  return *default_instance_;
}

DeviceInitParams* DeviceInitParams::default_instance_ = NULL;

DeviceInitParams* DeviceInitParams::New() const {
  return new DeviceInitParams;
}

void DeviceInitParams::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_cm_init()) {
      if (cm_init_ != NULL) cm_init_->::channel_manager::ChannelManagerInitParams::Clear();
    }
    if (has_mux_init()) {
      if (mux_init_ != NULL) mux_init_->::channel_manager::MultiplexerInitParams::Clear();
    }
    if (has_dspemul_init()) {
      if (dspemul_init_ != NULL) dspemul_init_->::task_manager::DSPEmulInitParams::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeviceInitParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p347_conf.DeviceInitParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .channel_manager.ChannelManagerInitParams cm_init = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cm_init()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_mux_init;
        break;
      }

      // optional .channel_manager.MultiplexerInitParams mux_init = 2;
      case 2: {
        if (tag == 18) {
         parse_mux_init:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mux_init()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_dspemul_init;
        break;
      }

      // optional .task_manager.DSPEmulInitParams dspemul_init = 3;
      case 3: {
        if (tag == 26) {
         parse_dspemul_init:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dspemul_init()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p347_conf.DeviceInitParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p347_conf.DeviceInitParams)
  return false;
#undef DO_
}

void DeviceInitParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p347_conf.DeviceInitParams)
  // optional .channel_manager.ChannelManagerInitParams cm_init = 1;
  if (has_cm_init()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cm_init(), output);
  }

  // optional .channel_manager.MultiplexerInitParams mux_init = 2;
  if (has_mux_init()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->mux_init(), output);
  }

  // optional .task_manager.DSPEmulInitParams dspemul_init = 3;
  if (has_dspemul_init()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->dspemul_init(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:p347_conf.DeviceInitParams)
}

::google::protobuf::uint8* DeviceInitParams::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:p347_conf.DeviceInitParams)
  // optional .channel_manager.ChannelManagerInitParams cm_init = 1;
  if (has_cm_init()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cm_init(), target);
  }

  // optional .channel_manager.MultiplexerInitParams mux_init = 2;
  if (has_mux_init()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->mux_init(), target);
  }

  // optional .task_manager.DSPEmulInitParams dspemul_init = 3;
  if (has_dspemul_init()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->dspemul_init(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p347_conf.DeviceInitParams)
  return target;
}

int DeviceInitParams::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .channel_manager.ChannelManagerInitParams cm_init = 1;
    if (has_cm_init()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cm_init());
    }

    // optional .channel_manager.MultiplexerInitParams mux_init = 2;
    if (has_mux_init()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->mux_init());
    }

    // optional .task_manager.DSPEmulInitParams dspemul_init = 3;
    if (has_dspemul_init()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dspemul_init());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceInitParams::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeviceInitParams* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeviceInitParams*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeviceInitParams::MergeFrom(const DeviceInitParams& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cm_init()) {
      mutable_cm_init()->::channel_manager::ChannelManagerInitParams::MergeFrom(from.cm_init());
    }
    if (from.has_mux_init()) {
      mutable_mux_init()->::channel_manager::MultiplexerInitParams::MergeFrom(from.mux_init());
    }
    if (from.has_dspemul_init()) {
      mutable_dspemul_init()->::task_manager::DSPEmulInitParams::MergeFrom(from.dspemul_init());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeviceInitParams::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceInitParams::CopyFrom(const DeviceInitParams& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceInitParams::IsInitialized() const {

  if (has_cm_init()) {
    if (!this->cm_init().IsInitialized()) return false;
  }
  if (has_mux_init()) {
    if (!this->mux_init().IsInitialized()) return false;
  }
  if (has_dspemul_init()) {
    if (!this->dspemul_init().IsInitialized()) return false;
  }
  return true;
}

void DeviceInitParams::Swap(DeviceInitParams* other) {
  if (other != this) {
    std::swap(cm_init_, other->cm_init_);
    std::swap(mux_init_, other->mux_init_);
    std::swap(dspemul_init_, other->dspemul_init_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DeviceInitParams::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeviceInitParams_descriptor_;
  metadata.reflection = DeviceInitParams_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DefaultDSPEmulParamsPack::kEmuIdxFieldNumber;
const int DefaultDSPEmulParamsPack::kABegSigOffSetFieldNumber;
const int DefaultDSPEmulParamsPack::kARotMetkasFromSigFieldNumber;
const int DefaultDSPEmulParamsPack::kABegRotOffSetFieldNumber;
const int DefaultDSPEmulParamsPack::kASrcSamplingFreqFieldNumber;
const int DefaultDSPEmulParamsPack::kAGainFieldNumber;
const int DefaultDSPEmulParamsPack::kASensitivityFieldNumber;
#endif  // !_MSC_VER

DefaultDSPEmulParamsPack::DefaultDSPEmulParamsPack()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:p347_conf.DefaultDSPEmulParamsPack)
}

void DefaultDSPEmulParamsPack::InitAsDefaultInstance() {
}

DefaultDSPEmulParamsPack::DefaultDSPEmulParamsPack(const DefaultDSPEmulParamsPack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:p347_conf.DefaultDSPEmulParamsPack)
}

void DefaultDSPEmulParamsPack::SharedCtor() {
  _cached_size_ = 0;
  emu_idx_ = 0u;
  abegsigoffset_ = 0u;
  arotmetkasfromsig_ = false;
  abegrotoffset_ = 0u;
  asrcsamplingfreq_ = 0u;
  again_ = 0;
  asensitivity_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DefaultDSPEmulParamsPack::~DefaultDSPEmulParamsPack() {
  // @@protoc_insertion_point(destructor:p347_conf.DefaultDSPEmulParamsPack)
  SharedDtor();
}

void DefaultDSPEmulParamsPack::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DefaultDSPEmulParamsPack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DefaultDSPEmulParamsPack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DefaultDSPEmulParamsPack_descriptor_;
}

const DefaultDSPEmulParamsPack& DefaultDSPEmulParamsPack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_p347_5fconf_2eproto();
  return *default_instance_;
}

DefaultDSPEmulParamsPack* DefaultDSPEmulParamsPack::default_instance_ = NULL;

DefaultDSPEmulParamsPack* DefaultDSPEmulParamsPack::New() const {
  return new DefaultDSPEmulParamsPack;
}

void DefaultDSPEmulParamsPack::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<DefaultDSPEmulParamsPack*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(emu_idx_, asrcsamplingfreq_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DefaultDSPEmulParamsPack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p347_conf.DefaultDSPEmulParamsPack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 emu_idx = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &emu_idx_)));
          set_has_emu_idx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ABegSigOffSet;
        break;
      }

      // required uint32 ABegSigOffSet = 2;
      case 2: {
        if (tag == 16) {
         parse_ABegSigOffSet:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &abegsigoffset_)));
          set_has_abegsigoffset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ARotMetkasFromSig;
        break;
      }

      // required bool ARotMetkasFromSig = 3;
      case 3: {
        if (tag == 24) {
         parse_ARotMetkasFromSig:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &arotmetkasfromsig_)));
          set_has_arotmetkasfromsig();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ABegRotOffSet;
        break;
      }

      // required uint32 ABegRotOffSet = 4;
      case 4: {
        if (tag == 32) {
         parse_ABegRotOffSet:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &abegrotoffset_)));
          set_has_abegrotoffset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ASrcSamplingFreq;
        break;
      }

      // required uint32 ASrcSamplingFreq = 5;
      case 5: {
        if (tag == 40) {
         parse_ASrcSamplingFreq:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &asrcsamplingfreq_)));
          set_has_asrcsamplingfreq();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_AGain;
        break;
      }

      // required double AGain = 6;
      case 6: {
        if (tag == 49) {
         parse_AGain:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &again_)));
          set_has_again();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_ASensitivity;
        break;
      }

      // required double ASensitivity = 7;
      case 7: {
        if (tag == 57) {
         parse_ASensitivity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &asensitivity_)));
          set_has_asensitivity();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p347_conf.DefaultDSPEmulParamsPack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p347_conf.DefaultDSPEmulParamsPack)
  return false;
#undef DO_
}

void DefaultDSPEmulParamsPack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p347_conf.DefaultDSPEmulParamsPack)
  // required uint32 emu_idx = 1;
  if (has_emu_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->emu_idx(), output);
  }

  // required uint32 ABegSigOffSet = 2;
  if (has_abegsigoffset()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->abegsigoffset(), output);
  }

  // required bool ARotMetkasFromSig = 3;
  if (has_arotmetkasfromsig()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->arotmetkasfromsig(), output);
  }

  // required uint32 ABegRotOffSet = 4;
  if (has_abegrotoffset()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->abegrotoffset(), output);
  }

  // required uint32 ASrcSamplingFreq = 5;
  if (has_asrcsamplingfreq()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->asrcsamplingfreq(), output);
  }

  // required double AGain = 6;
  if (has_again()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->again(), output);
  }

  // required double ASensitivity = 7;
  if (has_asensitivity()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->asensitivity(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:p347_conf.DefaultDSPEmulParamsPack)
}

::google::protobuf::uint8* DefaultDSPEmulParamsPack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:p347_conf.DefaultDSPEmulParamsPack)
  // required uint32 emu_idx = 1;
  if (has_emu_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->emu_idx(), target);
  }

  // required uint32 ABegSigOffSet = 2;
  if (has_abegsigoffset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->abegsigoffset(), target);
  }

  // required bool ARotMetkasFromSig = 3;
  if (has_arotmetkasfromsig()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->arotmetkasfromsig(), target);
  }

  // required uint32 ABegRotOffSet = 4;
  if (has_abegrotoffset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->abegrotoffset(), target);
  }

  // required uint32 ASrcSamplingFreq = 5;
  if (has_asrcsamplingfreq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->asrcsamplingfreq(), target);
  }

  // required double AGain = 6;
  if (has_again()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->again(), target);
  }

  // required double ASensitivity = 7;
  if (has_asensitivity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->asensitivity(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p347_conf.DefaultDSPEmulParamsPack)
  return target;
}

int DefaultDSPEmulParamsPack::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 emu_idx = 1;
    if (has_emu_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->emu_idx());
    }

    // required uint32 ABegSigOffSet = 2;
    if (has_abegsigoffset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->abegsigoffset());
    }

    // required bool ARotMetkasFromSig = 3;
    if (has_arotmetkasfromsig()) {
      total_size += 1 + 1;
    }

    // required uint32 ABegRotOffSet = 4;
    if (has_abegrotoffset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->abegrotoffset());
    }

    // required uint32 ASrcSamplingFreq = 5;
    if (has_asrcsamplingfreq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->asrcsamplingfreq());
    }

    // required double AGain = 6;
    if (has_again()) {
      total_size += 1 + 8;
    }

    // required double ASensitivity = 7;
    if (has_asensitivity()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DefaultDSPEmulParamsPack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DefaultDSPEmulParamsPack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DefaultDSPEmulParamsPack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DefaultDSPEmulParamsPack::MergeFrom(const DefaultDSPEmulParamsPack& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_emu_idx()) {
      set_emu_idx(from.emu_idx());
    }
    if (from.has_abegsigoffset()) {
      set_abegsigoffset(from.abegsigoffset());
    }
    if (from.has_arotmetkasfromsig()) {
      set_arotmetkasfromsig(from.arotmetkasfromsig());
    }
    if (from.has_abegrotoffset()) {
      set_abegrotoffset(from.abegrotoffset());
    }
    if (from.has_asrcsamplingfreq()) {
      set_asrcsamplingfreq(from.asrcsamplingfreq());
    }
    if (from.has_again()) {
      set_again(from.again());
    }
    if (from.has_asensitivity()) {
      set_asensitivity(from.asensitivity());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DefaultDSPEmulParamsPack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DefaultDSPEmulParamsPack::CopyFrom(const DefaultDSPEmulParamsPack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DefaultDSPEmulParamsPack::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  return true;
}

void DefaultDSPEmulParamsPack::Swap(DefaultDSPEmulParamsPack* other) {
  if (other != this) {
    std::swap(emu_idx_, other->emu_idx_);
    std::swap(abegsigoffset_, other->abegsigoffset_);
    std::swap(arotmetkasfromsig_, other->arotmetkasfromsig_);
    std::swap(abegrotoffset_, other->abegrotoffset_);
    std::swap(asrcsamplingfreq_, other->asrcsamplingfreq_);
    std::swap(again_, other->again_);
    std::swap(asensitivity_, other->asensitivity_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DefaultDSPEmulParamsPack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DefaultDSPEmulParamsPack_descriptor_;
  metadata.reflection = DefaultDSPEmulParamsPack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ServerConfPack::kCmInitConfFieldNumber;
const int ServerConfPack::kMuxInitConfFieldNumber;
const int ServerConfPack::kDspemulInitConfFieldNumber;
const int ServerConfPack::kDspemulParamsConfFieldNumber;
const int ServerConfPack::kSyncRegFieldNumber;
const int ServerConfPack::kAdcInitConfFieldNumber;
const int ServerConfPack::kRotInitConfFieldNumber;
const int ServerConfPack::kRegSettingsForWarmFieldNumber;
#endif  // !_MSC_VER

ServerConfPack::ServerConfPack()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:p347_conf.ServerConfPack)
}

void ServerConfPack::InitAsDefaultInstance() {
  cm_init_conf_ = const_cast< ::channel_manager::ChannelManagerInitParams*>(&::channel_manager::ChannelManagerInitParams::default_instance());
  mux_init_conf_ = const_cast< ::channel_manager::MultiplexerInitParams*>(&::channel_manager::MultiplexerInitParams::default_instance());
  dspemul_init_conf_ = const_cast< ::task_manager::DSPEmulInitParams*>(&::task_manager::DSPEmulInitParams::default_instance());
}

ServerConfPack::ServerConfPack(const ServerConfPack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:p347_conf.ServerConfPack)
}

void ServerConfPack::SharedCtor() {
  _cached_size_ = 0;
  cm_init_conf_ = NULL;
  mux_init_conf_ = NULL;
  dspemul_init_conf_ = NULL;
  sync_reg_ = 0u;
  reg_settings_for_warm_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServerConfPack::~ServerConfPack() {
  // @@protoc_insertion_point(destructor:p347_conf.ServerConfPack)
  SharedDtor();
}

void ServerConfPack::SharedDtor() {
  if (this != default_instance_) {
    delete cm_init_conf_;
    delete mux_init_conf_;
    delete dspemul_init_conf_;
  }
}

void ServerConfPack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerConfPack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerConfPack_descriptor_;
}

const ServerConfPack& ServerConfPack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_p347_5fconf_2eproto();
  return *default_instance_;
}

ServerConfPack* ServerConfPack::default_instance_ = NULL;

ServerConfPack* ServerConfPack::New() const {
  return new ServerConfPack;
}

void ServerConfPack::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ServerConfPack*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 151) {
    ZR_(sync_reg_, reg_settings_for_warm_);
    if (has_cm_init_conf()) {
      if (cm_init_conf_ != NULL) cm_init_conf_->::channel_manager::ChannelManagerInitParams::Clear();
    }
    if (has_mux_init_conf()) {
      if (mux_init_conf_ != NULL) mux_init_conf_->::channel_manager::MultiplexerInitParams::Clear();
    }
    if (has_dspemul_init_conf()) {
      if (dspemul_init_conf_ != NULL) dspemul_init_conf_->::task_manager::DSPEmulInitParams::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  dspemul_params_conf_.Clear();
  adc_init_conf_.Clear();
  rot_init_conf_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServerConfPack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p347_conf.ServerConfPack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .channel_manager.ChannelManagerInitParams cm_init_conf = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cm_init_conf()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_mux_init_conf;
        break;
      }

      // optional .channel_manager.MultiplexerInitParams mux_init_conf = 2;
      case 2: {
        if (tag == 18) {
         parse_mux_init_conf:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mux_init_conf()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_dspemul_init_conf;
        break;
      }

      // optional .task_manager.DSPEmulInitParams dspemul_init_conf = 3;
      case 3: {
        if (tag == 26) {
         parse_dspemul_init_conf:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dspemul_init_conf()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_dspemul_params_conf;
        break;
      }

      // repeated .p347_conf.DefaultDSPEmulParamsPack dspemul_params_conf = 4;
      case 4: {
        if (tag == 34) {
         parse_dspemul_params_conf:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dspemul_params_conf()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_dspemul_params_conf;
        if (input->ExpectTag(40)) goto parse_sync_reg;
        break;
      }

      // optional uint32 sync_reg = 5;
      case 5: {
        if (tag == 40) {
         parse_sync_reg:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sync_reg_)));
          set_has_sync_reg();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_adc_init_conf;
        break;
      }

      // repeated .channel_manager.ADCChannelInitParams adc_init_conf = 6;
      case 6: {
        if (tag == 50) {
         parse_adc_init_conf:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_adc_init_conf()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_adc_init_conf;
        if (input->ExpectTag(58)) goto parse_rot_init_conf;
        break;
      }

      // repeated .channel_manager.RotChannelInitParams rot_init_conf = 7;
      case 7: {
        if (tag == 58) {
         parse_rot_init_conf:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rot_init_conf()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_rot_init_conf;
        if (input->ExpectTag(64)) goto parse_reg_settings_for_warm;
        break;
      }

      // optional uint32 reg_settings_for_warm = 8;
      case 8: {
        if (tag == 64) {
         parse_reg_settings_for_warm:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reg_settings_for_warm_)));
          set_has_reg_settings_for_warm();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p347_conf.ServerConfPack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p347_conf.ServerConfPack)
  return false;
#undef DO_
}

void ServerConfPack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p347_conf.ServerConfPack)
  // optional .channel_manager.ChannelManagerInitParams cm_init_conf = 1;
  if (has_cm_init_conf()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cm_init_conf(), output);
  }

  // optional .channel_manager.MultiplexerInitParams mux_init_conf = 2;
  if (has_mux_init_conf()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->mux_init_conf(), output);
  }

  // optional .task_manager.DSPEmulInitParams dspemul_init_conf = 3;
  if (has_dspemul_init_conf()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->dspemul_init_conf(), output);
  }

  // repeated .p347_conf.DefaultDSPEmulParamsPack dspemul_params_conf = 4;
  for (int i = 0; i < this->dspemul_params_conf_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->dspemul_params_conf(i), output);
  }

  // optional uint32 sync_reg = 5;
  if (has_sync_reg()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->sync_reg(), output);
  }

  // repeated .channel_manager.ADCChannelInitParams adc_init_conf = 6;
  for (int i = 0; i < this->adc_init_conf_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->adc_init_conf(i), output);
  }

  // repeated .channel_manager.RotChannelInitParams rot_init_conf = 7;
  for (int i = 0; i < this->rot_init_conf_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->rot_init_conf(i), output);
  }

  // optional uint32 reg_settings_for_warm = 8;
  if (has_reg_settings_for_warm()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->reg_settings_for_warm(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:p347_conf.ServerConfPack)
}

::google::protobuf::uint8* ServerConfPack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:p347_conf.ServerConfPack)
  // optional .channel_manager.ChannelManagerInitParams cm_init_conf = 1;
  if (has_cm_init_conf()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cm_init_conf(), target);
  }

  // optional .channel_manager.MultiplexerInitParams mux_init_conf = 2;
  if (has_mux_init_conf()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->mux_init_conf(), target);
  }

  // optional .task_manager.DSPEmulInitParams dspemul_init_conf = 3;
  if (has_dspemul_init_conf()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->dspemul_init_conf(), target);
  }

  // repeated .p347_conf.DefaultDSPEmulParamsPack dspemul_params_conf = 4;
  for (int i = 0; i < this->dspemul_params_conf_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->dspemul_params_conf(i), target);
  }

  // optional uint32 sync_reg = 5;
  if (has_sync_reg()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->sync_reg(), target);
  }

  // repeated .channel_manager.ADCChannelInitParams adc_init_conf = 6;
  for (int i = 0; i < this->adc_init_conf_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->adc_init_conf(i), target);
  }

  // repeated .channel_manager.RotChannelInitParams rot_init_conf = 7;
  for (int i = 0; i < this->rot_init_conf_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->rot_init_conf(i), target);
  }

  // optional uint32 reg_settings_for_warm = 8;
  if (has_reg_settings_for_warm()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->reg_settings_for_warm(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p347_conf.ServerConfPack)
  return target;
}

int ServerConfPack::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .channel_manager.ChannelManagerInitParams cm_init_conf = 1;
    if (has_cm_init_conf()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cm_init_conf());
    }

    // optional .channel_manager.MultiplexerInitParams mux_init_conf = 2;
    if (has_mux_init_conf()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->mux_init_conf());
    }

    // optional .task_manager.DSPEmulInitParams dspemul_init_conf = 3;
    if (has_dspemul_init_conf()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dspemul_init_conf());
    }

    // optional uint32 sync_reg = 5;
    if (has_sync_reg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sync_reg());
    }

    // optional uint32 reg_settings_for_warm = 8;
    if (has_reg_settings_for_warm()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->reg_settings_for_warm());
    }

  }
  // repeated .p347_conf.DefaultDSPEmulParamsPack dspemul_params_conf = 4;
  total_size += 1 * this->dspemul_params_conf_size();
  for (int i = 0; i < this->dspemul_params_conf_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dspemul_params_conf(i));
  }

  // repeated .channel_manager.ADCChannelInitParams adc_init_conf = 6;
  total_size += 1 * this->adc_init_conf_size();
  for (int i = 0; i < this->adc_init_conf_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->adc_init_conf(i));
  }

  // repeated .channel_manager.RotChannelInitParams rot_init_conf = 7;
  total_size += 1 * this->rot_init_conf_size();
  for (int i = 0; i < this->rot_init_conf_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rot_init_conf(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerConfPack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServerConfPack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServerConfPack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServerConfPack::MergeFrom(const ServerConfPack& from) {
  GOOGLE_CHECK_NE(&from, this);
  dspemul_params_conf_.MergeFrom(from.dspemul_params_conf_);
  adc_init_conf_.MergeFrom(from.adc_init_conf_);
  rot_init_conf_.MergeFrom(from.rot_init_conf_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cm_init_conf()) {
      mutable_cm_init_conf()->::channel_manager::ChannelManagerInitParams::MergeFrom(from.cm_init_conf());
    }
    if (from.has_mux_init_conf()) {
      mutable_mux_init_conf()->::channel_manager::MultiplexerInitParams::MergeFrom(from.mux_init_conf());
    }
    if (from.has_dspemul_init_conf()) {
      mutable_dspemul_init_conf()->::task_manager::DSPEmulInitParams::MergeFrom(from.dspemul_init_conf());
    }
    if (from.has_sync_reg()) {
      set_sync_reg(from.sync_reg());
    }
    if (from.has_reg_settings_for_warm()) {
      set_reg_settings_for_warm(from.reg_settings_for_warm());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServerConfPack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerConfPack::CopyFrom(const ServerConfPack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerConfPack::IsInitialized() const {

  if (has_cm_init_conf()) {
    if (!this->cm_init_conf().IsInitialized()) return false;
  }
  if (has_mux_init_conf()) {
    if (!this->mux_init_conf().IsInitialized()) return false;
  }
  if (has_dspemul_init_conf()) {
    if (!this->dspemul_init_conf().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->dspemul_params_conf())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->adc_init_conf())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->rot_init_conf())) return false;
  return true;
}

void ServerConfPack::Swap(ServerConfPack* other) {
  if (other != this) {
    std::swap(cm_init_conf_, other->cm_init_conf_);
    std::swap(mux_init_conf_, other->mux_init_conf_);
    std::swap(dspemul_init_conf_, other->dspemul_init_conf_);
    dspemul_params_conf_.Swap(&other->dspemul_params_conf_);
    std::swap(sync_reg_, other->sync_reg_);
    adc_init_conf_.Swap(&other->adc_init_conf_);
    rot_init_conf_.Swap(&other->rot_init_conf_);
    std::swap(reg_settings_for_warm_, other->reg_settings_for_warm_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ServerConfPack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerConfPack_descriptor_;
  metadata.reflection = ServerConfPack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DotConf::kPoiIdxFieldNumber;
const int DotConf::kDotVibroIdxFieldNumber;
const int DotConf::kDotRotIdxFieldNumber;
const int DotConf::kDotPressIdxFieldNumber;
const int DotConf::kDotTempIdxFieldNumber;
#endif  // !_MSC_VER

DotConf::DotConf()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:p347_conf.DotConf)
}

void DotConf::InitAsDefaultInstance() {
}

DotConf::DotConf(const DotConf& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:p347_conf.DotConf)
}

void DotConf::SharedCtor() {
  _cached_size_ = 0;
  poi_idx_ = 0u;
  dot_vibro_idx_ = 0u;
  dot_rot_idx_ = 0u;
  dot_press_idx_ = 0u;
  dot_temp_idx_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DotConf::~DotConf() {
  // @@protoc_insertion_point(destructor:p347_conf.DotConf)
  SharedDtor();
}

void DotConf::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DotConf::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DotConf::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DotConf_descriptor_;
}

const DotConf& DotConf::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_p347_5fconf_2eproto();
  return *default_instance_;
}

DotConf* DotConf::default_instance_ = NULL;

DotConf* DotConf::New() const {
  return new DotConf;
}

void DotConf::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<DotConf*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(poi_idx_, dot_temp_idx_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DotConf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p347_conf.DotConf)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 poi_idx = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &poi_idx_)));
          set_has_poi_idx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_dot_vibro_idx;
        break;
      }

      // optional uint32 dot_vibro_idx = 2;
      case 2: {
        if (tag == 16) {
         parse_dot_vibro_idx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dot_vibro_idx_)));
          set_has_dot_vibro_idx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_dot_rot_idx;
        break;
      }

      // optional uint32 dot_rot_idx = 3;
      case 3: {
        if (tag == 24) {
         parse_dot_rot_idx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dot_rot_idx_)));
          set_has_dot_rot_idx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_dot_press_idx;
        break;
      }

      // optional uint32 dot_press_idx = 4;
      case 4: {
        if (tag == 32) {
         parse_dot_press_idx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dot_press_idx_)));
          set_has_dot_press_idx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_dot_temp_idx;
        break;
      }

      // optional uint32 dot_temp_idx = 5;
      case 5: {
        if (tag == 40) {
         parse_dot_temp_idx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dot_temp_idx_)));
          set_has_dot_temp_idx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p347_conf.DotConf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p347_conf.DotConf)
  return false;
#undef DO_
}

void DotConf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p347_conf.DotConf)
  // required uint32 poi_idx = 1;
  if (has_poi_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->poi_idx(), output);
  }

  // optional uint32 dot_vibro_idx = 2;
  if (has_dot_vibro_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dot_vibro_idx(), output);
  }

  // optional uint32 dot_rot_idx = 3;
  if (has_dot_rot_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->dot_rot_idx(), output);
  }

  // optional uint32 dot_press_idx = 4;
  if (has_dot_press_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->dot_press_idx(), output);
  }

  // optional uint32 dot_temp_idx = 5;
  if (has_dot_temp_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->dot_temp_idx(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:p347_conf.DotConf)
}

::google::protobuf::uint8* DotConf::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:p347_conf.DotConf)
  // required uint32 poi_idx = 1;
  if (has_poi_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->poi_idx(), target);
  }

  // optional uint32 dot_vibro_idx = 2;
  if (has_dot_vibro_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dot_vibro_idx(), target);
  }

  // optional uint32 dot_rot_idx = 3;
  if (has_dot_rot_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->dot_rot_idx(), target);
  }

  // optional uint32 dot_press_idx = 4;
  if (has_dot_press_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->dot_press_idx(), target);
  }

  // optional uint32 dot_temp_idx = 5;
  if (has_dot_temp_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->dot_temp_idx(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p347_conf.DotConf)
  return target;
}

int DotConf::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 poi_idx = 1;
    if (has_poi_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->poi_idx());
    }

    // optional uint32 dot_vibro_idx = 2;
    if (has_dot_vibro_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dot_vibro_idx());
    }

    // optional uint32 dot_rot_idx = 3;
    if (has_dot_rot_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dot_rot_idx());
    }

    // optional uint32 dot_press_idx = 4;
    if (has_dot_press_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dot_press_idx());
    }

    // optional uint32 dot_temp_idx = 5;
    if (has_dot_temp_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dot_temp_idx());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DotConf::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DotConf* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DotConf*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DotConf::MergeFrom(const DotConf& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_poi_idx()) {
      set_poi_idx(from.poi_idx());
    }
    if (from.has_dot_vibro_idx()) {
      set_dot_vibro_idx(from.dot_vibro_idx());
    }
    if (from.has_dot_rot_idx()) {
      set_dot_rot_idx(from.dot_rot_idx());
    }
    if (from.has_dot_press_idx()) {
      set_dot_press_idx(from.dot_press_idx());
    }
    if (from.has_dot_temp_idx()) {
      set_dot_temp_idx(from.dot_temp_idx());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DotConf::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DotConf::CopyFrom(const DotConf& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DotConf::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DotConf::Swap(DotConf* other) {
  if (other != this) {
    std::swap(poi_idx_, other->poi_idx_);
    std::swap(dot_vibro_idx_, other->dot_vibro_idx_);
    std::swap(dot_rot_idx_, other->dot_rot_idx_);
    std::swap(dot_press_idx_, other->dot_press_idx_);
    std::swap(dot_temp_idx_, other->dot_temp_idx_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DotConf::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DotConf_descriptor_;
  metadata.reflection = DotConf_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DotGroup::kGroupNameFieldNumber;
const int DotGroup::kDotConfigsFieldNumber;
#endif  // !_MSC_VER

DotGroup::DotGroup()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:p347_conf.DotGroup)
}

void DotGroup::InitAsDefaultInstance() {
}

DotGroup::DotGroup(const DotGroup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:p347_conf.DotGroup)
}

void DotGroup::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DotGroup::~DotGroup() {
  // @@protoc_insertion_point(destructor:p347_conf.DotGroup)
  SharedDtor();
}

void DotGroup::SharedDtor() {
  if (group_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_name_;
  }
  if (this != default_instance_) {
  }
}

void DotGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DotGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DotGroup_descriptor_;
}

const DotGroup& DotGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_p347_5fconf_2eproto();
  return *default_instance_;
}

DotGroup* DotGroup::default_instance_ = NULL;

DotGroup* DotGroup::New() const {
  return new DotGroup;
}

void DotGroup::Clear() {
  if (has_group_name()) {
    if (group_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      group_name_->clear();
    }
  }
  dot_configs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DotGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p347_conf.DotGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string group_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->group_name().data(), this->group_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "group_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_dot_configs;
        break;
      }

      // repeated .p347_conf.DotConf dot_configs = 2;
      case 2: {
        if (tag == 18) {
         parse_dot_configs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dot_configs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_dot_configs;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p347_conf.DotGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p347_conf.DotGroup)
  return false;
#undef DO_
}

void DotGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p347_conf.DotGroup)
  // required string group_name = 1;
  if (has_group_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_name().data(), this->group_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "group_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->group_name(), output);
  }

  // repeated .p347_conf.DotConf dot_configs = 2;
  for (int i = 0; i < this->dot_configs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->dot_configs(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:p347_conf.DotGroup)
}

::google::protobuf::uint8* DotGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:p347_conf.DotGroup)
  // required string group_name = 1;
  if (has_group_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_name().data(), this->group_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "group_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->group_name(), target);
  }

  // repeated .p347_conf.DotConf dot_configs = 2;
  for (int i = 0; i < this->dot_configs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->dot_configs(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p347_conf.DotGroup)
  return target;
}

int DotGroup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string group_name = 1;
    if (has_group_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->group_name());
    }

  }
  // repeated .p347_conf.DotConf dot_configs = 2;
  total_size += 1 * this->dot_configs_size();
  for (int i = 0; i < this->dot_configs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dot_configs(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DotGroup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DotGroup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DotGroup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DotGroup::MergeFrom(const DotGroup& from) {
  GOOGLE_CHECK_NE(&from, this);
  dot_configs_.MergeFrom(from.dot_configs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_group_name()) {
      set_group_name(from.group_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DotGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DotGroup::CopyFrom(const DotGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DotGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->dot_configs())) return false;
  return true;
}

void DotGroup::Swap(DotGroup* other) {
  if (other != this) {
    std::swap(group_name_, other->group_name_);
    dot_configs_.Swap(&other->dot_configs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DotGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DotGroup_descriptor_;
  metadata.reflection = DotGroup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DotChain::kChainNameFieldNumber;
const int DotChain::kDotGroupsFieldNumber;
#endif  // !_MSC_VER

DotChain::DotChain()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:p347_conf.DotChain)
}

void DotChain::InitAsDefaultInstance() {
}

DotChain::DotChain(const DotChain& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:p347_conf.DotChain)
}

void DotChain::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  chain_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DotChain::~DotChain() {
  // @@protoc_insertion_point(destructor:p347_conf.DotChain)
  SharedDtor();
}

void DotChain::SharedDtor() {
  if (chain_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete chain_name_;
  }
  if (this != default_instance_) {
  }
}

void DotChain::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DotChain::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DotChain_descriptor_;
}

const DotChain& DotChain::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_p347_5fconf_2eproto();
  return *default_instance_;
}

DotChain* DotChain::default_instance_ = NULL;

DotChain* DotChain::New() const {
  return new DotChain;
}

void DotChain::Clear() {
  if (has_chain_name()) {
    if (chain_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      chain_name_->clear();
    }
  }
  dot_groups_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DotChain::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p347_conf.DotChain)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string chain_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chain_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chain_name().data(), this->chain_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chain_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_dot_groups;
        break;
      }

      // repeated .p347_conf.DotGroup dot_groups = 2;
      case 2: {
        if (tag == 18) {
         parse_dot_groups:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dot_groups()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_dot_groups;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p347_conf.DotChain)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p347_conf.DotChain)
  return false;
#undef DO_
}

void DotChain::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p347_conf.DotChain)
  // required string chain_name = 1;
  if (has_chain_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chain_name().data(), this->chain_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chain_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->chain_name(), output);
  }

  // repeated .p347_conf.DotGroup dot_groups = 2;
  for (int i = 0; i < this->dot_groups_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->dot_groups(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:p347_conf.DotChain)
}

::google::protobuf::uint8* DotChain::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:p347_conf.DotChain)
  // required string chain_name = 1;
  if (has_chain_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chain_name().data(), this->chain_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chain_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->chain_name(), target);
  }

  // repeated .p347_conf.DotGroup dot_groups = 2;
  for (int i = 0; i < this->dot_groups_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->dot_groups(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p347_conf.DotChain)
  return target;
}

int DotChain::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string chain_name = 1;
    if (has_chain_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->chain_name());
    }

  }
  // repeated .p347_conf.DotGroup dot_groups = 2;
  total_size += 1 * this->dot_groups_size();
  for (int i = 0; i < this->dot_groups_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dot_groups(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DotChain::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DotChain* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DotChain*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DotChain::MergeFrom(const DotChain& from) {
  GOOGLE_CHECK_NE(&from, this);
  dot_groups_.MergeFrom(from.dot_groups_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chain_name()) {
      set_chain_name(from.chain_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DotChain::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DotChain::CopyFrom(const DotChain& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DotChain::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->dot_groups())) return false;
  return true;
}

void DotChain::Swap(DotChain* other) {
  if (other != this) {
    std::swap(chain_name_, other->chain_name_);
    dot_groups_.Swap(&other->dot_groups_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DotChain::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DotChain_descriptor_;
  metadata.reflection = DotChain_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int KdrInParams::kTypepointFieldNumber;
const int KdrInParams::kDrivePFieldNumber;
const int KdrInParams::kDriveZFieldNumber;
const int KdrInParams::kDriveCFieldNumber;
const int KdrInParams::kResursworkbearingFieldNumber;
const int KdrInParams::kMainBearingIdFieldNumber;
const int KdrInParams::kPairBearingIdFieldNumber;
const int KdrInParams::kReducerIdFieldNumber;
const int KdrInParams::kEnvPorogFieldNumber;
const int KdrInParams::kDirPorogFieldNumber;
const int KdrInParams::kKurtosisporogFieldNumber;
const int KdrInParams::kErrorfrotFieldNumber;
const int KdrInParams::kMaxerrorfrotFieldNumber;
const int KdrInParams::kKoeffrotationFieldNumber;
#endif  // !_MSC_VER

KdrInParams::KdrInParams()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:p347_conf.KdrInParams)
}

void KdrInParams::InitAsDefaultInstance() {
}

KdrInParams::KdrInParams(const KdrInParams& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:p347_conf.KdrInParams)
}

void KdrInParams::SharedCtor() {
  _cached_size_ = 0;
  typepoint_ = 0u;
  drive_p_ = 0u;
  drive_z_ = 0u;
  drive_c_ = 0u;
  resursworkbearing_ = 0u;
  main_bearing_id_ = 0u;
  pair_bearing_id_ = 0u;
  reducer_id_ = 0u;
  kurtosisporog_ = 0;
  errorfrot_ = 0;
  maxerrorfrot_ = 0;
  koeffrotation_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

KdrInParams::~KdrInParams() {
  // @@protoc_insertion_point(destructor:p347_conf.KdrInParams)
  SharedDtor();
}

void KdrInParams::SharedDtor() {
  if (this != default_instance_) {
  }
}

void KdrInParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KdrInParams::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KdrInParams_descriptor_;
}

const KdrInParams& KdrInParams::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_p347_5fconf_2eproto();
  return *default_instance_;
}

KdrInParams* KdrInParams::default_instance_ = NULL;

KdrInParams* KdrInParams::New() const {
  return new KdrInParams;
}

void KdrInParams::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<KdrInParams*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(typepoint_, reducer_id_);
  }
  ZR_(kurtosisporog_, koeffrotation_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  env_porog_.Clear();
  dir_porog_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool KdrInParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p347_conf.KdrInParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 typepoint = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &typepoint_)));
          set_has_typepoint();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_drive_p;
        break;
      }

      // optional uint32 drive_p = 2;
      case 2: {
        if (tag == 16) {
         parse_drive_p:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &drive_p_)));
          set_has_drive_p();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_drive_z;
        break;
      }

      // optional uint32 drive_z = 3;
      case 3: {
        if (tag == 24) {
         parse_drive_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &drive_z_)));
          set_has_drive_z();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_drive_c;
        break;
      }

      // optional uint32 drive_c = 4;
      case 4: {
        if (tag == 32) {
         parse_drive_c:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &drive_c_)));
          set_has_drive_c();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_resursworkbearing;
        break;
      }

      // required uint32 resursworkbearing = 5;
      case 5: {
        if (tag == 40) {
         parse_resursworkbearing:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &resursworkbearing_)));
          set_has_resursworkbearing();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_main_bearing_id;
        break;
      }

      // required uint32 main_bearing_id = 6;
      case 6: {
        if (tag == 48) {
         parse_main_bearing_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &main_bearing_id_)));
          set_has_main_bearing_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_pair_bearing_id;
        break;
      }

      // required uint32 pair_bearing_id = 7;
      case 7: {
        if (tag == 56) {
         parse_pair_bearing_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pair_bearing_id_)));
          set_has_pair_bearing_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_reducer_id;
        break;
      }

      // required uint32 reducer_id = 8;
      case 8: {
        if (tag == 64) {
         parse_reducer_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reducer_id_)));
          set_has_reducer_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_env_porog;
        break;
      }

      // repeated uint32 env_porog = 9;
      case 9: {
        if (tag == 72) {
         parse_env_porog:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 72, input, this->mutable_env_porog())));
        } else if (tag == 74) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_env_porog())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_env_porog;
        if (input->ExpectTag(80)) goto parse_dir_porog;
        break;
      }

      // repeated uint32 dir_porog = 10;
      case 10: {
        if (tag == 80) {
         parse_dir_porog:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 80, input, this->mutable_dir_porog())));
        } else if (tag == 82) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_dir_porog())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_dir_porog;
        if (input->ExpectTag(89)) goto parse_kurtosisporog;
        break;
      }

      // required double kurtosisporog = 11;
      case 11: {
        if (tag == 89) {
         parse_kurtosisporog:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &kurtosisporog_)));
          set_has_kurtosisporog();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_errorfrot;
        break;
      }

      // required double errorfrot = 12;
      case 12: {
        if (tag == 97) {
         parse_errorfrot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &errorfrot_)));
          set_has_errorfrot();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(105)) goto parse_maxerrorfrot;
        break;
      }

      // required double maxerrorfrot = 13;
      case 13: {
        if (tag == 105) {
         parse_maxerrorfrot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &maxerrorfrot_)));
          set_has_maxerrorfrot();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(113)) goto parse_koeffrotation;
        break;
      }

      // required double koeffrotation = 14;
      case 14: {
        if (tag == 113) {
         parse_koeffrotation:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &koeffrotation_)));
          set_has_koeffrotation();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p347_conf.KdrInParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p347_conf.KdrInParams)
  return false;
#undef DO_
}

void KdrInParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p347_conf.KdrInParams)
  // required uint32 typepoint = 1;
  if (has_typepoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->typepoint(), output);
  }

  // optional uint32 drive_p = 2;
  if (has_drive_p()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->drive_p(), output);
  }

  // optional uint32 drive_z = 3;
  if (has_drive_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->drive_z(), output);
  }

  // optional uint32 drive_c = 4;
  if (has_drive_c()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->drive_c(), output);
  }

  // required uint32 resursworkbearing = 5;
  if (has_resursworkbearing()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->resursworkbearing(), output);
  }

  // required uint32 main_bearing_id = 6;
  if (has_main_bearing_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->main_bearing_id(), output);
  }

  // required uint32 pair_bearing_id = 7;
  if (has_pair_bearing_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->pair_bearing_id(), output);
  }

  // required uint32 reducer_id = 8;
  if (has_reducer_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->reducer_id(), output);
  }

  // repeated uint32 env_porog = 9;
  for (int i = 0; i < this->env_porog_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      9, this->env_porog(i), output);
  }

  // repeated uint32 dir_porog = 10;
  for (int i = 0; i < this->dir_porog_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      10, this->dir_porog(i), output);
  }

  // required double kurtosisporog = 11;
  if (has_kurtosisporog()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->kurtosisporog(), output);
  }

  // required double errorfrot = 12;
  if (has_errorfrot()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->errorfrot(), output);
  }

  // required double maxerrorfrot = 13;
  if (has_maxerrorfrot()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->maxerrorfrot(), output);
  }

  // required double koeffrotation = 14;
  if (has_koeffrotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->koeffrotation(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:p347_conf.KdrInParams)
}

::google::protobuf::uint8* KdrInParams::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:p347_conf.KdrInParams)
  // required uint32 typepoint = 1;
  if (has_typepoint()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->typepoint(), target);
  }

  // optional uint32 drive_p = 2;
  if (has_drive_p()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->drive_p(), target);
  }

  // optional uint32 drive_z = 3;
  if (has_drive_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->drive_z(), target);
  }

  // optional uint32 drive_c = 4;
  if (has_drive_c()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->drive_c(), target);
  }

  // required uint32 resursworkbearing = 5;
  if (has_resursworkbearing()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->resursworkbearing(), target);
  }

  // required uint32 main_bearing_id = 6;
  if (has_main_bearing_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->main_bearing_id(), target);
  }

  // required uint32 pair_bearing_id = 7;
  if (has_pair_bearing_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->pair_bearing_id(), target);
  }

  // required uint32 reducer_id = 8;
  if (has_reducer_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->reducer_id(), target);
  }

  // repeated uint32 env_porog = 9;
  for (int i = 0; i < this->env_porog_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(9, this->env_porog(i), target);
  }

  // repeated uint32 dir_porog = 10;
  for (int i = 0; i < this->dir_porog_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(10, this->dir_porog(i), target);
  }

  // required double kurtosisporog = 11;
  if (has_kurtosisporog()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->kurtosisporog(), target);
  }

  // required double errorfrot = 12;
  if (has_errorfrot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->errorfrot(), target);
  }

  // required double maxerrorfrot = 13;
  if (has_maxerrorfrot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->maxerrorfrot(), target);
  }

  // required double koeffrotation = 14;
  if (has_koeffrotation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->koeffrotation(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p347_conf.KdrInParams)
  return target;
}

int KdrInParams::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 typepoint = 1;
    if (has_typepoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->typepoint());
    }

    // optional uint32 drive_p = 2;
    if (has_drive_p()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->drive_p());
    }

    // optional uint32 drive_z = 3;
    if (has_drive_z()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->drive_z());
    }

    // optional uint32 drive_c = 4;
    if (has_drive_c()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->drive_c());
    }

    // required uint32 resursworkbearing = 5;
    if (has_resursworkbearing()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->resursworkbearing());
    }

    // required uint32 main_bearing_id = 6;
    if (has_main_bearing_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->main_bearing_id());
    }

    // required uint32 pair_bearing_id = 7;
    if (has_pair_bearing_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pair_bearing_id());
    }

    // required uint32 reducer_id = 8;
    if (has_reducer_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->reducer_id());
    }

  }
  if (_has_bits_[10 / 32] & (0xffu << (10 % 32))) {
    // required double kurtosisporog = 11;
    if (has_kurtosisporog()) {
      total_size += 1 + 8;
    }

    // required double errorfrot = 12;
    if (has_errorfrot()) {
      total_size += 1 + 8;
    }

    // required double maxerrorfrot = 13;
    if (has_maxerrorfrot()) {
      total_size += 1 + 8;
    }

    // required double koeffrotation = 14;
    if (has_koeffrotation()) {
      total_size += 1 + 8;
    }

  }
  // repeated uint32 env_porog = 9;
  {
    int data_size = 0;
    for (int i = 0; i < this->env_porog_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->env_porog(i));
    }
    total_size += 1 * this->env_porog_size() + data_size;
  }

  // repeated uint32 dir_porog = 10;
  {
    int data_size = 0;
    for (int i = 0; i < this->dir_porog_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->dir_porog(i));
    }
    total_size += 1 * this->dir_porog_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KdrInParams::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const KdrInParams* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const KdrInParams*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void KdrInParams::MergeFrom(const KdrInParams& from) {
  GOOGLE_CHECK_NE(&from, this);
  env_porog_.MergeFrom(from.env_porog_);
  dir_porog_.MergeFrom(from.dir_porog_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_typepoint()) {
      set_typepoint(from.typepoint());
    }
    if (from.has_drive_p()) {
      set_drive_p(from.drive_p());
    }
    if (from.has_drive_z()) {
      set_drive_z(from.drive_z());
    }
    if (from.has_drive_c()) {
      set_drive_c(from.drive_c());
    }
    if (from.has_resursworkbearing()) {
      set_resursworkbearing(from.resursworkbearing());
    }
    if (from.has_main_bearing_id()) {
      set_main_bearing_id(from.main_bearing_id());
    }
    if (from.has_pair_bearing_id()) {
      set_pair_bearing_id(from.pair_bearing_id());
    }
    if (from.has_reducer_id()) {
      set_reducer_id(from.reducer_id());
    }
  }
  if (from._has_bits_[10 / 32] & (0xffu << (10 % 32))) {
    if (from.has_kurtosisporog()) {
      set_kurtosisporog(from.kurtosisporog());
    }
    if (from.has_errorfrot()) {
      set_errorfrot(from.errorfrot());
    }
    if (from.has_maxerrorfrot()) {
      set_maxerrorfrot(from.maxerrorfrot());
    }
    if (from.has_koeffrotation()) {
      set_koeffrotation(from.koeffrotation());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void KdrInParams::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KdrInParams::CopyFrom(const KdrInParams& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KdrInParams::IsInitialized() const {
  if ((_has_bits_[0] & 0x00003cf1) != 0x00003cf1) return false;

  return true;
}

void KdrInParams::Swap(KdrInParams* other) {
  if (other != this) {
    std::swap(typepoint_, other->typepoint_);
    std::swap(drive_p_, other->drive_p_);
    std::swap(drive_z_, other->drive_z_);
    std::swap(drive_c_, other->drive_c_);
    std::swap(resursworkbearing_, other->resursworkbearing_);
    std::swap(main_bearing_id_, other->main_bearing_id_);
    std::swap(pair_bearing_id_, other->pair_bearing_id_);
    std::swap(reducer_id_, other->reducer_id_);
    env_porog_.Swap(&other->env_porog_);
    dir_porog_.Swap(&other->dir_porog_);
    std::swap(kurtosisporog_, other->kurtosisporog_);
    std::swap(errorfrot_, other->errorfrot_);
    std::swap(maxerrorfrot_, other->maxerrorfrot_);
    std::swap(koeffrotation_, other->koeffrotation_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata KdrInParams::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KdrInParams_descriptor_;
  metadata.reflection = KdrInParams_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DotVibro::kDotIdxFieldNumber;
const int DotVibro::kRotPoiFieldNumber;
const int DotVibro::kTaskListFieldNumber;
const int DotVibro::kBegSigOffsetFieldNumber;
const int DotVibro::kBegRotOffsetFieldNumber;
const int DotVibro::kVibegFieldNumber;
const int DotVibro::kKdrInparamsFieldNumber;
#endif  // !_MSC_VER

DotVibro::DotVibro()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:p347_conf.DotVibro)
}

void DotVibro::InitAsDefaultInstance() {
  kdr_inparams_ = const_cast< ::p347_conf::KdrInParams*>(&::p347_conf::KdrInParams::default_instance());
}

DotVibro::DotVibro(const DotVibro& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:p347_conf.DotVibro)
}

void DotVibro::SharedCtor() {
  _cached_size_ = 0;
  dot_idx_ = 0u;
  rot_poi_ = 0u;
  beg_sig_offset_ = 0u;
  beg_rot_offset_ = 0u;
  vibeg_ = false;
  kdr_inparams_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DotVibro::~DotVibro() {
  // @@protoc_insertion_point(destructor:p347_conf.DotVibro)
  SharedDtor();
}

void DotVibro::SharedDtor() {
  if (this != default_instance_) {
    delete kdr_inparams_;
  }
}

void DotVibro::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DotVibro::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DotVibro_descriptor_;
}

const DotVibro& DotVibro::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_p347_5fconf_2eproto();
  return *default_instance_;
}

DotVibro* DotVibro::default_instance_ = NULL;

DotVibro* DotVibro::New() const {
  return new DotVibro;
}

void DotVibro::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<DotVibro*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 123) {
    ZR_(dot_idx_, rot_poi_);
    ZR_(beg_sig_offset_, beg_rot_offset_);
    vibeg_ = false;
    if (has_kdr_inparams()) {
      if (kdr_inparams_ != NULL) kdr_inparams_->::p347_conf::KdrInParams::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  task_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DotVibro::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p347_conf.DotVibro)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 dot_idx = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dot_idx_)));
          set_has_dot_idx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rot_poi;
        break;
      }

      // optional uint32 rot_poi = 2;
      case 2: {
        if (tag == 16) {
         parse_rot_poi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rot_poi_)));
          set_has_rot_poi();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_task_list;
        break;
      }

      // repeated .task_manager.AnyTaskParams task_list = 3;
      case 3: {
        if (tag == 26) {
         parse_task_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_task_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_task_list;
        if (input->ExpectTag(32)) goto parse_beg_sig_offset;
        break;
      }

      // required uint32 beg_sig_offset = 4;
      case 4: {
        if (tag == 32) {
         parse_beg_sig_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beg_sig_offset_)));
          set_has_beg_sig_offset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_beg_rot_offset;
        break;
      }

      // required uint32 beg_rot_offset = 5;
      case 5: {
        if (tag == 40) {
         parse_beg_rot_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beg_rot_offset_)));
          set_has_beg_rot_offset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_vibeg;
        break;
      }

      // required bool vibeg = 6;
      case 6: {
        if (tag == 48) {
         parse_vibeg:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vibeg_)));
          set_has_vibeg();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_kdr_inparams;
        break;
      }

      // required .p347_conf.KdrInParams kdr_inparams = 7;
      case 7: {
        if (tag == 58) {
         parse_kdr_inparams:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_kdr_inparams()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p347_conf.DotVibro)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p347_conf.DotVibro)
  return false;
#undef DO_
}

void DotVibro::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p347_conf.DotVibro)
  // required uint32 dot_idx = 1;
  if (has_dot_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dot_idx(), output);
  }

  // optional uint32 rot_poi = 2;
  if (has_rot_poi()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rot_poi(), output);
  }

  // repeated .task_manager.AnyTaskParams task_list = 3;
  for (int i = 0; i < this->task_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->task_list(i), output);
  }

  // required uint32 beg_sig_offset = 4;
  if (has_beg_sig_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->beg_sig_offset(), output);
  }

  // required uint32 beg_rot_offset = 5;
  if (has_beg_rot_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->beg_rot_offset(), output);
  }

  // required bool vibeg = 6;
  if (has_vibeg()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->vibeg(), output);
  }

  // required .p347_conf.KdrInParams kdr_inparams = 7;
  if (has_kdr_inparams()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->kdr_inparams(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:p347_conf.DotVibro)
}

::google::protobuf::uint8* DotVibro::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:p347_conf.DotVibro)
  // required uint32 dot_idx = 1;
  if (has_dot_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dot_idx(), target);
  }

  // optional uint32 rot_poi = 2;
  if (has_rot_poi()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rot_poi(), target);
  }

  // repeated .task_manager.AnyTaskParams task_list = 3;
  for (int i = 0; i < this->task_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->task_list(i), target);
  }

  // required uint32 beg_sig_offset = 4;
  if (has_beg_sig_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->beg_sig_offset(), target);
  }

  // required uint32 beg_rot_offset = 5;
  if (has_beg_rot_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->beg_rot_offset(), target);
  }

  // required bool vibeg = 6;
  if (has_vibeg()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->vibeg(), target);
  }

  // required .p347_conf.KdrInParams kdr_inparams = 7;
  if (has_kdr_inparams()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->kdr_inparams(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p347_conf.DotVibro)
  return target;
}

int DotVibro::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 dot_idx = 1;
    if (has_dot_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dot_idx());
    }

    // optional uint32 rot_poi = 2;
    if (has_rot_poi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rot_poi());
    }

    // required uint32 beg_sig_offset = 4;
    if (has_beg_sig_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->beg_sig_offset());
    }

    // required uint32 beg_rot_offset = 5;
    if (has_beg_rot_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->beg_rot_offset());
    }

    // required bool vibeg = 6;
    if (has_vibeg()) {
      total_size += 1 + 1;
    }

    // required .p347_conf.KdrInParams kdr_inparams = 7;
    if (has_kdr_inparams()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->kdr_inparams());
    }

  }
  // repeated .task_manager.AnyTaskParams task_list = 3;
  total_size += 1 * this->task_list_size();
  for (int i = 0; i < this->task_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->task_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DotVibro::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DotVibro* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DotVibro*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DotVibro::MergeFrom(const DotVibro& from) {
  GOOGLE_CHECK_NE(&from, this);
  task_list_.MergeFrom(from.task_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dot_idx()) {
      set_dot_idx(from.dot_idx());
    }
    if (from.has_rot_poi()) {
      set_rot_poi(from.rot_poi());
    }
    if (from.has_beg_sig_offset()) {
      set_beg_sig_offset(from.beg_sig_offset());
    }
    if (from.has_beg_rot_offset()) {
      set_beg_rot_offset(from.beg_rot_offset());
    }
    if (from.has_vibeg()) {
      set_vibeg(from.vibeg());
    }
    if (from.has_kdr_inparams()) {
      mutable_kdr_inparams()->::p347_conf::KdrInParams::MergeFrom(from.kdr_inparams());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DotVibro::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DotVibro::CopyFrom(const DotVibro& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DotVibro::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000079) != 0x00000079) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->task_list())) return false;
  if (has_kdr_inparams()) {
    if (!this->kdr_inparams().IsInitialized()) return false;
  }
  return true;
}

void DotVibro::Swap(DotVibro* other) {
  if (other != this) {
    std::swap(dot_idx_, other->dot_idx_);
    std::swap(rot_poi_, other->rot_poi_);
    task_list_.Swap(&other->task_list_);
    std::swap(beg_sig_offset_, other->beg_sig_offset_);
    std::swap(beg_rot_offset_, other->beg_rot_offset_);
    std::swap(vibeg_, other->vibeg_);
    std::swap(kdr_inparams_, other->kdr_inparams_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DotVibro::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DotVibro_descriptor_;
  metadata.reflection = DotVibro_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DotRot::kDotIdxFieldNumber;
#endif  // !_MSC_VER

DotRot::DotRot()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:p347_conf.DotRot)
}

void DotRot::InitAsDefaultInstance() {
}

DotRot::DotRot(const DotRot& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:p347_conf.DotRot)
}

void DotRot::SharedCtor() {
  _cached_size_ = 0;
  dot_idx_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DotRot::~DotRot() {
  // @@protoc_insertion_point(destructor:p347_conf.DotRot)
  SharedDtor();
}

void DotRot::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DotRot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DotRot::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DotRot_descriptor_;
}

const DotRot& DotRot::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_p347_5fconf_2eproto();
  return *default_instance_;
}

DotRot* DotRot::default_instance_ = NULL;

DotRot* DotRot::New() const {
  return new DotRot;
}

void DotRot::Clear() {
  dot_idx_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DotRot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p347_conf.DotRot)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 dot_idx = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dot_idx_)));
          set_has_dot_idx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p347_conf.DotRot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p347_conf.DotRot)
  return false;
#undef DO_
}

void DotRot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p347_conf.DotRot)
  // required uint32 dot_idx = 1;
  if (has_dot_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dot_idx(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:p347_conf.DotRot)
}

::google::protobuf::uint8* DotRot::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:p347_conf.DotRot)
  // required uint32 dot_idx = 1;
  if (has_dot_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dot_idx(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p347_conf.DotRot)
  return target;
}

int DotRot::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 dot_idx = 1;
    if (has_dot_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dot_idx());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DotRot::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DotRot* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DotRot*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DotRot::MergeFrom(const DotRot& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dot_idx()) {
      set_dot_idx(from.dot_idx());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DotRot::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DotRot::CopyFrom(const DotRot& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DotRot::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DotRot::Swap(DotRot* other) {
  if (other != this) {
    std::swap(dot_idx_, other->dot_idx_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DotRot::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DotRot_descriptor_;
  metadata.reflection = DotRot_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DotPress::kDotIdxFieldNumber;
#endif  // !_MSC_VER

DotPress::DotPress()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:p347_conf.DotPress)
}

void DotPress::InitAsDefaultInstance() {
}

DotPress::DotPress(const DotPress& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:p347_conf.DotPress)
}

void DotPress::SharedCtor() {
  _cached_size_ = 0;
  dot_idx_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DotPress::~DotPress() {
  // @@protoc_insertion_point(destructor:p347_conf.DotPress)
  SharedDtor();
}

void DotPress::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DotPress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DotPress::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DotPress_descriptor_;
}

const DotPress& DotPress::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_p347_5fconf_2eproto();
  return *default_instance_;
}

DotPress* DotPress::default_instance_ = NULL;

DotPress* DotPress::New() const {
  return new DotPress;
}

void DotPress::Clear() {
  dot_idx_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DotPress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p347_conf.DotPress)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 dot_idx = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dot_idx_)));
          set_has_dot_idx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p347_conf.DotPress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p347_conf.DotPress)
  return false;
#undef DO_
}

void DotPress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p347_conf.DotPress)
  // required uint32 dot_idx = 1;
  if (has_dot_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dot_idx(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:p347_conf.DotPress)
}

::google::protobuf::uint8* DotPress::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:p347_conf.DotPress)
  // required uint32 dot_idx = 1;
  if (has_dot_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dot_idx(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p347_conf.DotPress)
  return target;
}

int DotPress::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 dot_idx = 1;
    if (has_dot_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dot_idx());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DotPress::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DotPress* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DotPress*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DotPress::MergeFrom(const DotPress& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dot_idx()) {
      set_dot_idx(from.dot_idx());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DotPress::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DotPress::CopyFrom(const DotPress& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DotPress::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DotPress::Swap(DotPress* other) {
  if (other != this) {
    std::swap(dot_idx_, other->dot_idx_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DotPress::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DotPress_descriptor_;
  metadata.reflection = DotPress_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DotTemp::kDotIdxFieldNumber;
#endif  // !_MSC_VER

DotTemp::DotTemp()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:p347_conf.DotTemp)
}

void DotTemp::InitAsDefaultInstance() {
}

DotTemp::DotTemp(const DotTemp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:p347_conf.DotTemp)
}

void DotTemp::SharedCtor() {
  _cached_size_ = 0;
  dot_idx_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DotTemp::~DotTemp() {
  // @@protoc_insertion_point(destructor:p347_conf.DotTemp)
  SharedDtor();
}

void DotTemp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DotTemp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DotTemp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DotTemp_descriptor_;
}

const DotTemp& DotTemp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_p347_5fconf_2eproto();
  return *default_instance_;
}

DotTemp* DotTemp::default_instance_ = NULL;

DotTemp* DotTemp::New() const {
  return new DotTemp;
}

void DotTemp::Clear() {
  dot_idx_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DotTemp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p347_conf.DotTemp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 dot_idx = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dot_idx_)));
          set_has_dot_idx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p347_conf.DotTemp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p347_conf.DotTemp)
  return false;
#undef DO_
}

void DotTemp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p347_conf.DotTemp)
  // required uint32 dot_idx = 1;
  if (has_dot_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dot_idx(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:p347_conf.DotTemp)
}

::google::protobuf::uint8* DotTemp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:p347_conf.DotTemp)
  // required uint32 dot_idx = 1;
  if (has_dot_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dot_idx(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p347_conf.DotTemp)
  return target;
}

int DotTemp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 dot_idx = 1;
    if (has_dot_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dot_idx());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DotTemp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DotTemp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DotTemp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DotTemp::MergeFrom(const DotTemp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dot_idx()) {
      set_dot_idx(from.dot_idx());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DotTemp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DotTemp::CopyFrom(const DotTemp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DotTemp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DotTemp::Swap(DotTemp* other) {
  if (other != this) {
    std::swap(dot_idx_, other->dot_idx_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DotTemp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DotTemp_descriptor_;
  metadata.reflection = DotTemp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WorkConfiguration::kConfIdFieldNumber;
const int WorkConfiguration::kObjectTypeFieldNumber;
const int WorkConfiguration::kObjectMapFieldNumber;
const int WorkConfiguration::kDotChainsFieldNumber;
const int WorkConfiguration::kDotsVibroListFieldNumber;
const int WorkConfiguration::kDotsRotListFieldNumber;
const int WorkConfiguration::kDotsPressListFieldNumber;
const int WorkConfiguration::kDotsTempListFieldNumber;
#endif  // !_MSC_VER

WorkConfiguration::WorkConfiguration()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:p347_conf.WorkConfiguration)
}

void WorkConfiguration::InitAsDefaultInstance() {
  object_map_ = const_cast< ::p347_conf::ObjectMap*>(&::p347_conf::ObjectMap::default_instance());
}

WorkConfiguration::WorkConfiguration(const WorkConfiguration& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:p347_conf.WorkConfiguration)
}

void WorkConfiguration::SharedCtor() {
  _cached_size_ = 0;
  conf_id_ = 0u;
  object_type_ = 0u;
  object_map_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WorkConfiguration::~WorkConfiguration() {
  // @@protoc_insertion_point(destructor:p347_conf.WorkConfiguration)
  SharedDtor();
}

void WorkConfiguration::SharedDtor() {
  if (this != default_instance_) {
    delete object_map_;
  }
}

void WorkConfiguration::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorkConfiguration::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WorkConfiguration_descriptor_;
}

const WorkConfiguration& WorkConfiguration::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_p347_5fconf_2eproto();
  return *default_instance_;
}

WorkConfiguration* WorkConfiguration::default_instance_ = NULL;

WorkConfiguration* WorkConfiguration::New() const {
  return new WorkConfiguration;
}

void WorkConfiguration::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<WorkConfiguration*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(conf_id_, object_type_);
    if (has_object_map()) {
      if (object_map_ != NULL) object_map_->::p347_conf::ObjectMap::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  dot_chains_.Clear();
  dots_vibro_list_.Clear();
  dots_rot_list_.Clear();
  dots_press_list_.Clear();
  dots_temp_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WorkConfiguration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p347_conf.WorkConfiguration)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 conf_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &conf_id_)));
          set_has_conf_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_object_type;
        break;
      }

      // required uint32 object_type = 2;
      case 2: {
        if (tag == 16) {
         parse_object_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &object_type_)));
          set_has_object_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_object_map;
        break;
      }

      // required .p347_conf.ObjectMap object_map = 3;
      case 3: {
        if (tag == 26) {
         parse_object_map:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_object_map()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_dot_chains;
        break;
      }

      // repeated .p347_conf.DotChain dot_chains = 5;
      case 5: {
        if (tag == 42) {
         parse_dot_chains:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dot_chains()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_dot_chains;
        if (input->ExpectTag(50)) goto parse_dots_vibro_list;
        break;
      }

      // repeated .p347_conf.DotVibro dots_vibro_list = 6;
      case 6: {
        if (tag == 50) {
         parse_dots_vibro_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dots_vibro_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_dots_vibro_list;
        if (input->ExpectTag(58)) goto parse_dots_rot_list;
        break;
      }

      // repeated .p347_conf.DotRot dots_rot_list = 7;
      case 7: {
        if (tag == 58) {
         parse_dots_rot_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dots_rot_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_dots_rot_list;
        if (input->ExpectTag(66)) goto parse_dots_press_list;
        break;
      }

      // repeated .p347_conf.DotPress dots_press_list = 8;
      case 8: {
        if (tag == 66) {
         parse_dots_press_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dots_press_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_dots_press_list;
        if (input->ExpectTag(74)) goto parse_dots_temp_list;
        break;
      }

      // repeated .p347_conf.DotTemp dots_temp_list = 9;
      case 9: {
        if (tag == 74) {
         parse_dots_temp_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dots_temp_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_dots_temp_list;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p347_conf.WorkConfiguration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p347_conf.WorkConfiguration)
  return false;
#undef DO_
}

void WorkConfiguration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p347_conf.WorkConfiguration)
  // required uint32 conf_id = 1;
  if (has_conf_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->conf_id(), output);
  }

  // required uint32 object_type = 2;
  if (has_object_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->object_type(), output);
  }

  // required .p347_conf.ObjectMap object_map = 3;
  if (has_object_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->object_map(), output);
  }

  // repeated .p347_conf.DotChain dot_chains = 5;
  for (int i = 0; i < this->dot_chains_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->dot_chains(i), output);
  }

  // repeated .p347_conf.DotVibro dots_vibro_list = 6;
  for (int i = 0; i < this->dots_vibro_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->dots_vibro_list(i), output);
  }

  // repeated .p347_conf.DotRot dots_rot_list = 7;
  for (int i = 0; i < this->dots_rot_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->dots_rot_list(i), output);
  }

  // repeated .p347_conf.DotPress dots_press_list = 8;
  for (int i = 0; i < this->dots_press_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->dots_press_list(i), output);
  }

  // repeated .p347_conf.DotTemp dots_temp_list = 9;
  for (int i = 0; i < this->dots_temp_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->dots_temp_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:p347_conf.WorkConfiguration)
}

::google::protobuf::uint8* WorkConfiguration::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:p347_conf.WorkConfiguration)
  // required uint32 conf_id = 1;
  if (has_conf_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->conf_id(), target);
  }

  // required uint32 object_type = 2;
  if (has_object_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->object_type(), target);
  }

  // required .p347_conf.ObjectMap object_map = 3;
  if (has_object_map()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->object_map(), target);
  }

  // repeated .p347_conf.DotChain dot_chains = 5;
  for (int i = 0; i < this->dot_chains_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->dot_chains(i), target);
  }

  // repeated .p347_conf.DotVibro dots_vibro_list = 6;
  for (int i = 0; i < this->dots_vibro_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->dots_vibro_list(i), target);
  }

  // repeated .p347_conf.DotRot dots_rot_list = 7;
  for (int i = 0; i < this->dots_rot_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->dots_rot_list(i), target);
  }

  // repeated .p347_conf.DotPress dots_press_list = 8;
  for (int i = 0; i < this->dots_press_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->dots_press_list(i), target);
  }

  // repeated .p347_conf.DotTemp dots_temp_list = 9;
  for (int i = 0; i < this->dots_temp_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->dots_temp_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p347_conf.WorkConfiguration)
  return target;
}

int WorkConfiguration::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 conf_id = 1;
    if (has_conf_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->conf_id());
    }

    // required uint32 object_type = 2;
    if (has_object_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->object_type());
    }

    // required .p347_conf.ObjectMap object_map = 3;
    if (has_object_map()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->object_map());
    }

  }
  // repeated .p347_conf.DotChain dot_chains = 5;
  total_size += 1 * this->dot_chains_size();
  for (int i = 0; i < this->dot_chains_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dot_chains(i));
  }

  // repeated .p347_conf.DotVibro dots_vibro_list = 6;
  total_size += 1 * this->dots_vibro_list_size();
  for (int i = 0; i < this->dots_vibro_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dots_vibro_list(i));
  }

  // repeated .p347_conf.DotRot dots_rot_list = 7;
  total_size += 1 * this->dots_rot_list_size();
  for (int i = 0; i < this->dots_rot_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dots_rot_list(i));
  }

  // repeated .p347_conf.DotPress dots_press_list = 8;
  total_size += 1 * this->dots_press_list_size();
  for (int i = 0; i < this->dots_press_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dots_press_list(i));
  }

  // repeated .p347_conf.DotTemp dots_temp_list = 9;
  total_size += 1 * this->dots_temp_list_size();
  for (int i = 0; i < this->dots_temp_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dots_temp_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorkConfiguration::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WorkConfiguration* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WorkConfiguration*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WorkConfiguration::MergeFrom(const WorkConfiguration& from) {
  GOOGLE_CHECK_NE(&from, this);
  dot_chains_.MergeFrom(from.dot_chains_);
  dots_vibro_list_.MergeFrom(from.dots_vibro_list_);
  dots_rot_list_.MergeFrom(from.dots_rot_list_);
  dots_press_list_.MergeFrom(from.dots_press_list_);
  dots_temp_list_.MergeFrom(from.dots_temp_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_conf_id()) {
      set_conf_id(from.conf_id());
    }
    if (from.has_object_type()) {
      set_object_type(from.object_type());
    }
    if (from.has_object_map()) {
      mutable_object_map()->::p347_conf::ObjectMap::MergeFrom(from.object_map());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WorkConfiguration::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkConfiguration::CopyFrom(const WorkConfiguration& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkConfiguration::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_object_map()) {
    if (!this->object_map().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->dot_chains())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->dots_vibro_list())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->dots_rot_list())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->dots_press_list())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->dots_temp_list())) return false;
  return true;
}

void WorkConfiguration::Swap(WorkConfiguration* other) {
  if (other != this) {
    std::swap(conf_id_, other->conf_id_);
    std::swap(object_type_, other->object_type_);
    std::swap(object_map_, other->object_map_);
    dot_chains_.Swap(&other->dot_chains_);
    dots_vibro_list_.Swap(&other->dots_vibro_list_);
    dots_rot_list_.Swap(&other->dots_rot_list_);
    dots_press_list_.Swap(&other->dots_press_list_);
    dots_temp_list_.Swap(&other->dots_temp_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WorkConfiguration::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WorkConfiguration_descriptor_;
  metadata.reflection = WorkConfiguration_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Bearing::kBearingIdxFieldNumber;
const int Bearing::kBearingNameFieldNumber;
const int Bearing::kDinFieldNumber;
const int Bearing::kDoutFieldNumber;
const int Bearing::kAnglFieldNumber;
const int Bearing::kDrolFieldNumber;
const int Bearing::kNrolFieldNumber;
const int Bearing::kDnrolFieldNumber;
#endif  // !_MSC_VER

Bearing::Bearing()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:p347_conf.Bearing)
}

void Bearing::InitAsDefaultInstance() {
}

Bearing::Bearing(const Bearing& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:p347_conf.Bearing)
}

void Bearing::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  bearing_idx_ = 0u;
  bearing_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  din_ = 0;
  dout_ = 0;
  angl_ = 0;
  drol_ = 0;
  nrol_ = 0u;
  dnrol_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Bearing::~Bearing() {
  // @@protoc_insertion_point(destructor:p347_conf.Bearing)
  SharedDtor();
}

void Bearing::SharedDtor() {
  if (bearing_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete bearing_name_;
  }
  if (this != default_instance_) {
  }
}

void Bearing::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Bearing::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Bearing_descriptor_;
}

const Bearing& Bearing::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_p347_5fconf_2eproto();
  return *default_instance_;
}

Bearing* Bearing::default_instance_ = NULL;

Bearing* Bearing::New() const {
  return new Bearing;
}

void Bearing::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Bearing*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(din_, dnrol_);
    if (has_bearing_name()) {
      if (bearing_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        bearing_name_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Bearing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p347_conf.Bearing)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 bearing_idx = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bearing_idx_)));
          set_has_bearing_idx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_bearing_name;
        break;
      }

      // required string bearing_name = 2;
      case 2: {
        if (tag == 18) {
         parse_bearing_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bearing_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bearing_name().data(), this->bearing_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "bearing_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_din;
        break;
      }

      // required double din = 3;
      case 3: {
        if (tag == 25) {
         parse_din:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &din_)));
          set_has_din();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_dout;
        break;
      }

      // required double dout = 4;
      case 4: {
        if (tag == 33) {
         parse_dout:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dout_)));
          set_has_dout();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_angl;
        break;
      }

      // required double angl = 5;
      case 5: {
        if (tag == 41) {
         parse_angl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &angl_)));
          set_has_angl();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_drol;
        break;
      }

      // required double drol = 6;
      case 6: {
        if (tag == 49) {
         parse_drol:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &drol_)));
          set_has_drol();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_nrol;
        break;
      }

      // required uint32 nrol = 7;
      case 7: {
        if (tag == 56) {
         parse_nrol:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nrol_)));
          set_has_nrol();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_dnrol;
        break;
      }

      // required uint32 dnrol = 8;
      case 8: {
        if (tag == 64) {
         parse_dnrol:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dnrol_)));
          set_has_dnrol();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p347_conf.Bearing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p347_conf.Bearing)
  return false;
#undef DO_
}

void Bearing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p347_conf.Bearing)
  // required uint32 bearing_idx = 1;
  if (has_bearing_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->bearing_idx(), output);
  }

  // required string bearing_name = 2;
  if (has_bearing_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bearing_name().data(), this->bearing_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bearing_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->bearing_name(), output);
  }

  // required double din = 3;
  if (has_din()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->din(), output);
  }

  // required double dout = 4;
  if (has_dout()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->dout(), output);
  }

  // required double angl = 5;
  if (has_angl()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->angl(), output);
  }

  // required double drol = 6;
  if (has_drol()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->drol(), output);
  }

  // required uint32 nrol = 7;
  if (has_nrol()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->nrol(), output);
  }

  // required uint32 dnrol = 8;
  if (has_dnrol()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->dnrol(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:p347_conf.Bearing)
}

::google::protobuf::uint8* Bearing::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:p347_conf.Bearing)
  // required uint32 bearing_idx = 1;
  if (has_bearing_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->bearing_idx(), target);
  }

  // required string bearing_name = 2;
  if (has_bearing_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bearing_name().data(), this->bearing_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "bearing_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bearing_name(), target);
  }

  // required double din = 3;
  if (has_din()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->din(), target);
  }

  // required double dout = 4;
  if (has_dout()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->dout(), target);
  }

  // required double angl = 5;
  if (has_angl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->angl(), target);
  }

  // required double drol = 6;
  if (has_drol()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->drol(), target);
  }

  // required uint32 nrol = 7;
  if (has_nrol()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->nrol(), target);
  }

  // required uint32 dnrol = 8;
  if (has_dnrol()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->dnrol(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p347_conf.Bearing)
  return target;
}

int Bearing::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 bearing_idx = 1;
    if (has_bearing_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bearing_idx());
    }

    // required string bearing_name = 2;
    if (has_bearing_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bearing_name());
    }

    // required double din = 3;
    if (has_din()) {
      total_size += 1 + 8;
    }

    // required double dout = 4;
    if (has_dout()) {
      total_size += 1 + 8;
    }

    // required double angl = 5;
    if (has_angl()) {
      total_size += 1 + 8;
    }

    // required double drol = 6;
    if (has_drol()) {
      total_size += 1 + 8;
    }

    // required uint32 nrol = 7;
    if (has_nrol()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->nrol());
    }

    // required uint32 dnrol = 8;
    if (has_dnrol()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dnrol());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Bearing::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Bearing* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Bearing*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Bearing::MergeFrom(const Bearing& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bearing_idx()) {
      set_bearing_idx(from.bearing_idx());
    }
    if (from.has_bearing_name()) {
      set_bearing_name(from.bearing_name());
    }
    if (from.has_din()) {
      set_din(from.din());
    }
    if (from.has_dout()) {
      set_dout(from.dout());
    }
    if (from.has_angl()) {
      set_angl(from.angl());
    }
    if (from.has_drol()) {
      set_drol(from.drol());
    }
    if (from.has_nrol()) {
      set_nrol(from.nrol());
    }
    if (from.has_dnrol()) {
      set_dnrol(from.dnrol());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Bearing::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bearing::CopyFrom(const Bearing& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bearing::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;

  return true;
}

void Bearing::Swap(Bearing* other) {
  if (other != this) {
    std::swap(bearing_idx_, other->bearing_idx_);
    std::swap(bearing_name_, other->bearing_name_);
    std::swap(din_, other->din_);
    std::swap(dout_, other->dout_);
    std::swap(angl_, other->angl_);
    std::swap(drol_, other->drol_);
    std::swap(nrol_, other->nrol_);
    std::swap(dnrol_, other->dnrol_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Bearing::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Bearing_descriptor_;
  metadata.reflection = Bearing_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Reducer::kReducerIdxFieldNumber;
const int Reducer::kReducerNameFieldNumber;
const int Reducer::kAxisFieldNumber;
const int Reducer::kZ12FieldNumber;
const int Reducer::kZ21FieldNumber;
const int Reducer::kZ23FieldNumber;
const int Reducer::kZ32FieldNumber;
const int Reducer::kZ34FieldNumber;
const int Reducer::kZ43FieldNumber;
const int Reducer::kZ45FieldNumber;
const int Reducer::kZ54FieldNumber;
#endif  // !_MSC_VER

Reducer::Reducer()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:p347_conf.Reducer)
}

void Reducer::InitAsDefaultInstance() {
}

Reducer::Reducer(const Reducer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:p347_conf.Reducer)
}

void Reducer::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  reducer_idx_ = 0u;
  reducer_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  axis_ = 0u;
  z12_ = 0u;
  z21_ = 0u;
  z23_ = 0u;
  z32_ = 0u;
  z34_ = 0u;
  z43_ = 0u;
  z45_ = 0u;
  z54_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Reducer::~Reducer() {
  // @@protoc_insertion_point(destructor:p347_conf.Reducer)
  SharedDtor();
}

void Reducer::SharedDtor() {
  if (reducer_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reducer_name_;
  }
  if (this != default_instance_) {
  }
}

void Reducer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Reducer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Reducer_descriptor_;
}

const Reducer& Reducer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_p347_5fconf_2eproto();
  return *default_instance_;
}

Reducer* Reducer::default_instance_ = NULL;

Reducer* Reducer::New() const {
  return new Reducer;
}

void Reducer::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Reducer*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(reducer_idx_, z34_);
    if (has_reducer_name()) {
      if (reducer_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        reducer_name_->clear();
      }
    }
  }
  ZR_(z43_, z54_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Reducer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p347_conf.Reducer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 reducer_idx = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reducer_idx_)));
          set_has_reducer_idx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_reducer_name;
        break;
      }

      // required string reducer_name = 2;
      case 2: {
        if (tag == 18) {
         parse_reducer_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reducer_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reducer_name().data(), this->reducer_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "reducer_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_axis;
        break;
      }

      // required uint32 axis = 3;
      case 3: {
        if (tag == 24) {
         parse_axis:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &axis_)));
          set_has_axis();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_z12;
        break;
      }

      // required uint32 z12 = 4;
      case 4: {
        if (tag == 32) {
         parse_z12:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &z12_)));
          set_has_z12();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_z21;
        break;
      }

      // required uint32 z21 = 5;
      case 5: {
        if (tag == 40) {
         parse_z21:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &z21_)));
          set_has_z21();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_z23;
        break;
      }

      // required uint32 z23 = 6;
      case 6: {
        if (tag == 48) {
         parse_z23:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &z23_)));
          set_has_z23();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_z32;
        break;
      }

      // required uint32 z32 = 7;
      case 7: {
        if (tag == 56) {
         parse_z32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &z32_)));
          set_has_z32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_z34;
        break;
      }

      // required uint32 z34 = 8;
      case 8: {
        if (tag == 64) {
         parse_z34:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &z34_)));
          set_has_z34();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_z43;
        break;
      }

      // required uint32 z43 = 9;
      case 9: {
        if (tag == 72) {
         parse_z43:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &z43_)));
          set_has_z43();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_z45;
        break;
      }

      // required uint32 z45 = 10;
      case 10: {
        if (tag == 80) {
         parse_z45:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &z45_)));
          set_has_z45();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_z54;
        break;
      }

      // required uint32 z54 = 11;
      case 11: {
        if (tag == 88) {
         parse_z54:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &z54_)));
          set_has_z54();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p347_conf.Reducer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p347_conf.Reducer)
  return false;
#undef DO_
}

void Reducer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p347_conf.Reducer)
  // required uint32 reducer_idx = 1;
  if (has_reducer_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->reducer_idx(), output);
  }

  // required string reducer_name = 2;
  if (has_reducer_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reducer_name().data(), this->reducer_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "reducer_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->reducer_name(), output);
  }

  // required uint32 axis = 3;
  if (has_axis()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->axis(), output);
  }

  // required uint32 z12 = 4;
  if (has_z12()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->z12(), output);
  }

  // required uint32 z21 = 5;
  if (has_z21()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->z21(), output);
  }

  // required uint32 z23 = 6;
  if (has_z23()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->z23(), output);
  }

  // required uint32 z32 = 7;
  if (has_z32()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->z32(), output);
  }

  // required uint32 z34 = 8;
  if (has_z34()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->z34(), output);
  }

  // required uint32 z43 = 9;
  if (has_z43()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->z43(), output);
  }

  // required uint32 z45 = 10;
  if (has_z45()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->z45(), output);
  }

  // required uint32 z54 = 11;
  if (has_z54()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->z54(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:p347_conf.Reducer)
}

::google::protobuf::uint8* Reducer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:p347_conf.Reducer)
  // required uint32 reducer_idx = 1;
  if (has_reducer_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->reducer_idx(), target);
  }

  // required string reducer_name = 2;
  if (has_reducer_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reducer_name().data(), this->reducer_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "reducer_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->reducer_name(), target);
  }

  // required uint32 axis = 3;
  if (has_axis()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->axis(), target);
  }

  // required uint32 z12 = 4;
  if (has_z12()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->z12(), target);
  }

  // required uint32 z21 = 5;
  if (has_z21()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->z21(), target);
  }

  // required uint32 z23 = 6;
  if (has_z23()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->z23(), target);
  }

  // required uint32 z32 = 7;
  if (has_z32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->z32(), target);
  }

  // required uint32 z34 = 8;
  if (has_z34()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->z34(), target);
  }

  // required uint32 z43 = 9;
  if (has_z43()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->z43(), target);
  }

  // required uint32 z45 = 10;
  if (has_z45()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->z45(), target);
  }

  // required uint32 z54 = 11;
  if (has_z54()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->z54(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p347_conf.Reducer)
  return target;
}

int Reducer::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 reducer_idx = 1;
    if (has_reducer_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->reducer_idx());
    }

    // required string reducer_name = 2;
    if (has_reducer_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reducer_name());
    }

    // required uint32 axis = 3;
    if (has_axis()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->axis());
    }

    // required uint32 z12 = 4;
    if (has_z12()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->z12());
    }

    // required uint32 z21 = 5;
    if (has_z21()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->z21());
    }

    // required uint32 z23 = 6;
    if (has_z23()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->z23());
    }

    // required uint32 z32 = 7;
    if (has_z32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->z32());
    }

    // required uint32 z34 = 8;
    if (has_z34()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->z34());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required uint32 z43 = 9;
    if (has_z43()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->z43());
    }

    // required uint32 z45 = 10;
    if (has_z45()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->z45());
    }

    // required uint32 z54 = 11;
    if (has_z54()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->z54());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Reducer::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Reducer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Reducer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Reducer::MergeFrom(const Reducer& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reducer_idx()) {
      set_reducer_idx(from.reducer_idx());
    }
    if (from.has_reducer_name()) {
      set_reducer_name(from.reducer_name());
    }
    if (from.has_axis()) {
      set_axis(from.axis());
    }
    if (from.has_z12()) {
      set_z12(from.z12());
    }
    if (from.has_z21()) {
      set_z21(from.z21());
    }
    if (from.has_z23()) {
      set_z23(from.z23());
    }
    if (from.has_z32()) {
      set_z32(from.z32());
    }
    if (from.has_z34()) {
      set_z34(from.z34());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_z43()) {
      set_z43(from.z43());
    }
    if (from.has_z45()) {
      set_z45(from.z45());
    }
    if (from.has_z54()) {
      set_z54(from.z54());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Reducer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Reducer::CopyFrom(const Reducer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Reducer::IsInitialized() const {
  if ((_has_bits_[0] & 0x000007ff) != 0x000007ff) return false;

  return true;
}

void Reducer::Swap(Reducer* other) {
  if (other != this) {
    std::swap(reducer_idx_, other->reducer_idx_);
    std::swap(reducer_name_, other->reducer_name_);
    std::swap(axis_, other->axis_);
    std::swap(z12_, other->z12_);
    std::swap(z21_, other->z21_);
    std::swap(z23_, other->z23_);
    std::swap(z32_, other->z32_);
    std::swap(z34_, other->z34_);
    std::swap(z43_, other->z43_);
    std::swap(z45_, other->z45_);
    std::swap(z54_, other->z54_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Reducer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Reducer_descriptor_;
  metadata.reflection = Reducer_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReducerList::kRdFieldNumber;
#endif  // !_MSC_VER

ReducerList::ReducerList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:p347_conf.ReducerList)
}

void ReducerList::InitAsDefaultInstance() {
}

ReducerList::ReducerList(const ReducerList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:p347_conf.ReducerList)
}

void ReducerList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReducerList::~ReducerList() {
  // @@protoc_insertion_point(destructor:p347_conf.ReducerList)
  SharedDtor();
}

void ReducerList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReducerList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReducerList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReducerList_descriptor_;
}

const ReducerList& ReducerList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_p347_5fconf_2eproto();
  return *default_instance_;
}

ReducerList* ReducerList::default_instance_ = NULL;

ReducerList* ReducerList::New() const {
  return new ReducerList;
}

void ReducerList::Clear() {
  rd_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReducerList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p347_conf.ReducerList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .p347_conf.Reducer rd = 1;
      case 1: {
        if (tag == 10) {
         parse_rd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rd()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_rd;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p347_conf.ReducerList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p347_conf.ReducerList)
  return false;
#undef DO_
}

void ReducerList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p347_conf.ReducerList)
  // repeated .p347_conf.Reducer rd = 1;
  for (int i = 0; i < this->rd_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rd(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:p347_conf.ReducerList)
}

::google::protobuf::uint8* ReducerList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:p347_conf.ReducerList)
  // repeated .p347_conf.Reducer rd = 1;
  for (int i = 0; i < this->rd_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rd(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p347_conf.ReducerList)
  return target;
}

int ReducerList::ByteSize() const {
  int total_size = 0;

  // repeated .p347_conf.Reducer rd = 1;
  total_size += 1 * this->rd_size();
  for (int i = 0; i < this->rd_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rd(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReducerList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReducerList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReducerList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReducerList::MergeFrom(const ReducerList& from) {
  GOOGLE_CHECK_NE(&from, this);
  rd_.MergeFrom(from.rd_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReducerList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReducerList::CopyFrom(const ReducerList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReducerList::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->rd())) return false;
  return true;
}

void ReducerList::Swap(ReducerList* other) {
  if (other != this) {
    rd_.Swap(&other->rd_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReducerList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReducerList_descriptor_;
  metadata.reflection = ReducerList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BearingList::kBrFieldNumber;
#endif  // !_MSC_VER

BearingList::BearingList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:p347_conf.BearingList)
}

void BearingList::InitAsDefaultInstance() {
}

BearingList::BearingList(const BearingList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:p347_conf.BearingList)
}

void BearingList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BearingList::~BearingList() {
  // @@protoc_insertion_point(destructor:p347_conf.BearingList)
  SharedDtor();
}

void BearingList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BearingList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BearingList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BearingList_descriptor_;
}

const BearingList& BearingList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_p347_5fconf_2eproto();
  return *default_instance_;
}

BearingList* BearingList::default_instance_ = NULL;

BearingList* BearingList::New() const {
  return new BearingList;
}

void BearingList::Clear() {
  br_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BearingList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p347_conf.BearingList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .p347_conf.Bearing br = 1;
      case 1: {
        if (tag == 10) {
         parse_br:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_br()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_br;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p347_conf.BearingList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p347_conf.BearingList)
  return false;
#undef DO_
}

void BearingList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p347_conf.BearingList)
  // repeated .p347_conf.Bearing br = 1;
  for (int i = 0; i < this->br_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->br(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:p347_conf.BearingList)
}

::google::protobuf::uint8* BearingList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:p347_conf.BearingList)
  // repeated .p347_conf.Bearing br = 1;
  for (int i = 0; i < this->br_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->br(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p347_conf.BearingList)
  return target;
}

int BearingList::ByteSize() const {
  int total_size = 0;

  // repeated .p347_conf.Bearing br = 1;
  total_size += 1 * this->br_size();
  for (int i = 0; i < this->br_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->br(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BearingList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BearingList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BearingList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BearingList::MergeFrom(const BearingList& from) {
  GOOGLE_CHECK_NE(&from, this);
  br_.MergeFrom(from.br_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BearingList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BearingList::CopyFrom(const BearingList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BearingList::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->br())) return false;
  return true;
}

void BearingList::Swap(BearingList* other) {
  if (other != this) {
    br_.Swap(&other->br_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BearingList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BearingList_descriptor_;
  metadata.reflection = BearingList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FrqTab::kLFieldNumber;
const int FrqTab::kRFieldNumber;
#endif  // !_MSC_VER

FrqTab::FrqTab()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:p347_conf.FrqTab)
}

void FrqTab::InitAsDefaultInstance() {
}

FrqTab::FrqTab(const FrqTab& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:p347_conf.FrqTab)
}

void FrqTab::SharedCtor() {
  _cached_size_ = 0;
  l_ = 0u;
  r_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FrqTab::~FrqTab() {
  // @@protoc_insertion_point(destructor:p347_conf.FrqTab)
  SharedDtor();
}

void FrqTab::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FrqTab::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FrqTab::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FrqTab_descriptor_;
}

const FrqTab& FrqTab::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_p347_5fconf_2eproto();
  return *default_instance_;
}

FrqTab* FrqTab::default_instance_ = NULL;

FrqTab* FrqTab::New() const {
  return new FrqTab;
}

void FrqTab::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<FrqTab*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(l_, r_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FrqTab::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p347_conf.FrqTab)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 L = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &l_)));
          set_has_l();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_R;
        break;
      }

      // required uint32 R = 2;
      case 2: {
        if (tag == 16) {
         parse_R:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &r_)));
          set_has_r();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p347_conf.FrqTab)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p347_conf.FrqTab)
  return false;
#undef DO_
}

void FrqTab::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p347_conf.FrqTab)
  // required uint32 L = 1;
  if (has_l()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->l(), output);
  }

  // required uint32 R = 2;
  if (has_r()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->r(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:p347_conf.FrqTab)
}

::google::protobuf::uint8* FrqTab::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:p347_conf.FrqTab)
  // required uint32 L = 1;
  if (has_l()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->l(), target);
  }

  // required uint32 R = 2;
  if (has_r()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->r(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p347_conf.FrqTab)
  return target;
}

int FrqTab::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 L = 1;
    if (has_l()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->l());
    }

    // required uint32 R = 2;
    if (has_r()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->r());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FrqTab::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FrqTab* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FrqTab*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FrqTab::MergeFrom(const FrqTab& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_l()) {
      set_l(from.l());
    }
    if (from.has_r()) {
      set_r(from.r());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FrqTab::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrqTab::CopyFrom(const FrqTab& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrqTab::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void FrqTab::Swap(FrqTab* other) {
  if (other != this) {
    std::swap(l_, other->l_);
    std::swap(r_, other->r_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FrqTab::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FrqTab_descriptor_;
  metadata.reflection = FrqTab_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SpLevel::kLvFieldNumber;
#endif  // !_MSC_VER

SpLevel::SpLevel()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:p347_conf.SpLevel)
}

void SpLevel::InitAsDefaultInstance() {
}

SpLevel::SpLevel(const SpLevel& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:p347_conf.SpLevel)
}

void SpLevel::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SpLevel::~SpLevel() {
  // @@protoc_insertion_point(destructor:p347_conf.SpLevel)
  SharedDtor();
}

void SpLevel::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SpLevel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SpLevel::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SpLevel_descriptor_;
}

const SpLevel& SpLevel::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_p347_5fconf_2eproto();
  return *default_instance_;
}

SpLevel* SpLevel::default_instance_ = NULL;

SpLevel* SpLevel::New() const {
  return new SpLevel;
}

void SpLevel::Clear() {
  lv_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SpLevel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p347_conf.SpLevel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double lv = 1;
      case 1: {
        if (tag == 9) {
         parse_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9, input, this->mutable_lv())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_lv())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(9)) goto parse_lv;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p347_conf.SpLevel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p347_conf.SpLevel)
  return false;
#undef DO_
}

void SpLevel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p347_conf.SpLevel)
  // repeated double lv = 1;
  for (int i = 0; i < this->lv_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->lv(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:p347_conf.SpLevel)
}

::google::protobuf::uint8* SpLevel::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:p347_conf.SpLevel)
  // repeated double lv = 1;
  for (int i = 0; i < this->lv_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(1, this->lv(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p347_conf.SpLevel)
  return target;
}

int SpLevel::ByteSize() const {
  int total_size = 0;

  // repeated double lv = 1;
  {
    int data_size = 0;
    data_size = 8 * this->lv_size();
    total_size += 1 * this->lv_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SpLevel::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SpLevel* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SpLevel*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SpLevel::MergeFrom(const SpLevel& from) {
  GOOGLE_CHECK_NE(&from, this);
  lv_.MergeFrom(from.lv_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SpLevel::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpLevel::CopyFrom(const SpLevel& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpLevel::IsInitialized() const {

  return true;
}

void SpLevel::Swap(SpLevel* other) {
  if (other != this) {
    lv_.Swap(&other->lv_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SpLevel::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SpLevel_descriptor_;
  metadata.reflection = SpLevel_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MNTRLevels::kNchFieldNumber;
const int MNTRLevels::kFreqTabFieldNumber;
const int MNTRLevels::kSpLevelsFieldNumber;
#endif  // !_MSC_VER

MNTRLevels::MNTRLevels()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:p347_conf.MNTRLevels)
}

void MNTRLevels::InitAsDefaultInstance() {
}

MNTRLevels::MNTRLevels(const MNTRLevels& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:p347_conf.MNTRLevels)
}

void MNTRLevels::SharedCtor() {
  _cached_size_ = 0;
  nch_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MNTRLevels::~MNTRLevels() {
  // @@protoc_insertion_point(destructor:p347_conf.MNTRLevels)
  SharedDtor();
}

void MNTRLevels::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MNTRLevels::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MNTRLevels::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MNTRLevels_descriptor_;
}

const MNTRLevels& MNTRLevels::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_p347_5fconf_2eproto();
  return *default_instance_;
}

MNTRLevels* MNTRLevels::default_instance_ = NULL;

MNTRLevels* MNTRLevels::New() const {
  return new MNTRLevels;
}

void MNTRLevels::Clear() {
  nch_ = 0u;
  freq_tab_.Clear();
  sp_levels_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MNTRLevels::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p347_conf.MNTRLevels)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 nch = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nch_)));
          set_has_nch();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_freq_tab;
        break;
      }

      // repeated .p347_conf.FrqTab freq_tab = 2;
      case 2: {
        if (tag == 18) {
         parse_freq_tab:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_freq_tab()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_freq_tab;
        if (input->ExpectTag(26)) goto parse_sp_levels;
        break;
      }

      // repeated .p347_conf.SpLevel sp_levels = 3;
      case 3: {
        if (tag == 26) {
         parse_sp_levels:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sp_levels()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sp_levels;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p347_conf.MNTRLevels)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p347_conf.MNTRLevels)
  return false;
#undef DO_
}

void MNTRLevels::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p347_conf.MNTRLevels)
  // required uint32 nch = 1;
  if (has_nch()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->nch(), output);
  }

  // repeated .p347_conf.FrqTab freq_tab = 2;
  for (int i = 0; i < this->freq_tab_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->freq_tab(i), output);
  }

  // repeated .p347_conf.SpLevel sp_levels = 3;
  for (int i = 0; i < this->sp_levels_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->sp_levels(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:p347_conf.MNTRLevels)
}

::google::protobuf::uint8* MNTRLevels::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:p347_conf.MNTRLevels)
  // required uint32 nch = 1;
  if (has_nch()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->nch(), target);
  }

  // repeated .p347_conf.FrqTab freq_tab = 2;
  for (int i = 0; i < this->freq_tab_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->freq_tab(i), target);
  }

  // repeated .p347_conf.SpLevel sp_levels = 3;
  for (int i = 0; i < this->sp_levels_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->sp_levels(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p347_conf.MNTRLevels)
  return target;
}

int MNTRLevels::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 nch = 1;
    if (has_nch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->nch());
    }

  }
  // repeated .p347_conf.FrqTab freq_tab = 2;
  total_size += 1 * this->freq_tab_size();
  for (int i = 0; i < this->freq_tab_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->freq_tab(i));
  }

  // repeated .p347_conf.SpLevel sp_levels = 3;
  total_size += 1 * this->sp_levels_size();
  for (int i = 0; i < this->sp_levels_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sp_levels(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MNTRLevels::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MNTRLevels* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MNTRLevels*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MNTRLevels::MergeFrom(const MNTRLevels& from) {
  GOOGLE_CHECK_NE(&from, this);
  freq_tab_.MergeFrom(from.freq_tab_);
  sp_levels_.MergeFrom(from.sp_levels_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nch()) {
      set_nch(from.nch());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MNTRLevels::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MNTRLevels::CopyFrom(const MNTRLevels& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MNTRLevels::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->freq_tab())) return false;
  return true;
}

void MNTRLevels::Swap(MNTRLevels* other) {
  if (other != this) {
    std::swap(nch_, other->nch_);
    freq_tab_.Swap(&other->freq_tab_);
    sp_levels_.Swap(&other->sp_levels_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MNTRLevels::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MNTRLevels_descriptor_;
  metadata.reflection = MNTRLevels_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PorogDirData::kMpgroupFieldNumber;
const int PorogDirData::kDirnlineFieldNumber;
const int PorogDirData::kDirfsFieldNumber;
const int PorogDirData::kMLevelsFieldNumber;
#endif  // !_MSC_VER

PorogDirData::PorogDirData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:p347_conf.PorogDirData)
}

void PorogDirData::InitAsDefaultInstance() {
  m_levels_ = const_cast< ::p347_conf::MNTRLevels*>(&::p347_conf::MNTRLevels::default_instance());
}

PorogDirData::PorogDirData(const PorogDirData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:p347_conf.PorogDirData)
}

void PorogDirData::SharedCtor() {
  _cached_size_ = 0;
  mpgroup_ = 0u;
  dirnline_ = 0u;
  dirfs_ = 0;
  m_levels_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PorogDirData::~PorogDirData() {
  // @@protoc_insertion_point(destructor:p347_conf.PorogDirData)
  SharedDtor();
}

void PorogDirData::SharedDtor() {
  if (this != default_instance_) {
    delete m_levels_;
  }
}

void PorogDirData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PorogDirData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PorogDirData_descriptor_;
}

const PorogDirData& PorogDirData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_p347_5fconf_2eproto();
  return *default_instance_;
}

PorogDirData* PorogDirData::default_instance_ = NULL;

PorogDirData* PorogDirData::New() const {
  return new PorogDirData;
}

void PorogDirData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PorogDirData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(mpgroup_, dirfs_);
    if (has_m_levels()) {
      if (m_levels_ != NULL) m_levels_->::p347_conf::MNTRLevels::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PorogDirData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p347_conf.PorogDirData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 mpgroup = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mpgroup_)));
          set_has_mpgroup();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_dirnline;
        break;
      }

      // required uint32 dirnline = 2;
      case 2: {
        if (tag == 16) {
         parse_dirnline:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dirnline_)));
          set_has_dirnline();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_dirfs;
        break;
      }

      // required double dirfs = 3;
      case 3: {
        if (tag == 25) {
         parse_dirfs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dirfs_)));
          set_has_dirfs();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_m_levels;
        break;
      }

      // required .p347_conf.MNTRLevels m_levels = 4;
      case 4: {
        if (tag == 34) {
         parse_m_levels:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_m_levels()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p347_conf.PorogDirData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p347_conf.PorogDirData)
  return false;
#undef DO_
}

void PorogDirData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p347_conf.PorogDirData)
  // required uint32 mpgroup = 1;
  if (has_mpgroup()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->mpgroup(), output);
  }

  // required uint32 dirnline = 2;
  if (has_dirnline()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dirnline(), output);
  }

  // required double dirfs = 3;
  if (has_dirfs()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->dirfs(), output);
  }

  // required .p347_conf.MNTRLevels m_levels = 4;
  if (has_m_levels()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->m_levels(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:p347_conf.PorogDirData)
}

::google::protobuf::uint8* PorogDirData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:p347_conf.PorogDirData)
  // required uint32 mpgroup = 1;
  if (has_mpgroup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->mpgroup(), target);
  }

  // required uint32 dirnline = 2;
  if (has_dirnline()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dirnline(), target);
  }

  // required double dirfs = 3;
  if (has_dirfs()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->dirfs(), target);
  }

  // required .p347_conf.MNTRLevels m_levels = 4;
  if (has_m_levels()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->m_levels(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p347_conf.PorogDirData)
  return target;
}

int PorogDirData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 mpgroup = 1;
    if (has_mpgroup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mpgroup());
    }

    // required uint32 dirnline = 2;
    if (has_dirnline()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dirnline());
    }

    // required double dirfs = 3;
    if (has_dirfs()) {
      total_size += 1 + 8;
    }

    // required .p347_conf.MNTRLevels m_levels = 4;
    if (has_m_levels()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->m_levels());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PorogDirData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PorogDirData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PorogDirData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PorogDirData::MergeFrom(const PorogDirData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mpgroup()) {
      set_mpgroup(from.mpgroup());
    }
    if (from.has_dirnline()) {
      set_dirnline(from.dirnline());
    }
    if (from.has_dirfs()) {
      set_dirfs(from.dirfs());
    }
    if (from.has_m_levels()) {
      mutable_m_levels()->::p347_conf::MNTRLevels::MergeFrom(from.m_levels());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PorogDirData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PorogDirData::CopyFrom(const PorogDirData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PorogDirData::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_m_levels()) {
    if (!this->m_levels().IsInitialized()) return false;
  }
  return true;
}

void PorogDirData::Swap(PorogDirData* other) {
  if (other != this) {
    std::swap(mpgroup_, other->mpgroup_);
    std::swap(dirnline_, other->dirnline_);
    std::swap(dirfs_, other->dirfs_);
    std::swap(m_levels_, other->m_levels_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PorogDirData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PorogDirData_descriptor_;
  metadata.reflection = PorogDirData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EnvEtalon::kFirstLineMOFieldNumber;
#endif  // !_MSC_VER

EnvEtalon::EnvEtalon()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:p347_conf.EnvEtalon)
}

void EnvEtalon::InitAsDefaultInstance() {
}

EnvEtalon::EnvEtalon(const EnvEtalon& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:p347_conf.EnvEtalon)
}

void EnvEtalon::SharedCtor() {
  _cached_size_ = 0;
  firstlinemo_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EnvEtalon::~EnvEtalon() {
  // @@protoc_insertion_point(destructor:p347_conf.EnvEtalon)
  SharedDtor();
}

void EnvEtalon::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EnvEtalon::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnvEtalon::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnvEtalon_descriptor_;
}

const EnvEtalon& EnvEtalon::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_p347_5fconf_2eproto();
  return *default_instance_;
}

EnvEtalon* EnvEtalon::default_instance_ = NULL;

EnvEtalon* EnvEtalon::New() const {
  return new EnvEtalon;
}

void EnvEtalon::Clear() {
  firstlinemo_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EnvEtalon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p347_conf.EnvEtalon)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double FirstLineMO = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &firstlinemo_)));
          set_has_firstlinemo();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p347_conf.EnvEtalon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p347_conf.EnvEtalon)
  return false;
#undef DO_
}

void EnvEtalon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p347_conf.EnvEtalon)
  // required double FirstLineMO = 1;
  if (has_firstlinemo()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->firstlinemo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:p347_conf.EnvEtalon)
}

::google::protobuf::uint8* EnvEtalon::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:p347_conf.EnvEtalon)
  // required double FirstLineMO = 1;
  if (has_firstlinemo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->firstlinemo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p347_conf.EnvEtalon)
  return target;
}

int EnvEtalon::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double FirstLineMO = 1;
    if (has_firstlinemo()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnvEtalon::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EnvEtalon* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EnvEtalon*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EnvEtalon::MergeFrom(const EnvEtalon& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_firstlinemo()) {
      set_firstlinemo(from.firstlinemo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EnvEtalon::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnvEtalon::CopyFrom(const EnvEtalon& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnvEtalon::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void EnvEtalon::Swap(EnvEtalon* other) {
  if (other != this) {
    std::swap(firstlinemo_, other->firstlinemo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EnvEtalon::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EnvEtalon_descriptor_;
  metadata.reflection = EnvEtalon_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DirEtalon::kNMidlValueFieldNumber;
const int DirEtalon::kNBeginMidleSpFieldNumber;
const int DirEtalon::kCountMidleSpFieldNumber;
const int DirEtalon::kLevelFieldNumber;
const int DirEtalon::kLevelOptFieldNumber;
#endif  // !_MSC_VER

DirEtalon::DirEtalon()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:p347_conf.DirEtalon)
}

void DirEtalon::InitAsDefaultInstance() {
}

DirEtalon::DirEtalon(const DirEtalon& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:p347_conf.DirEtalon)
}

void DirEtalon::SharedCtor() {
  _cached_size_ = 0;
  nmidlvalue_ = 0u;
  nbeginmidlesp_ = 0u;
  countmidlesp_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DirEtalon::~DirEtalon() {
  // @@protoc_insertion_point(destructor:p347_conf.DirEtalon)
  SharedDtor();
}

void DirEtalon::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DirEtalon::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DirEtalon::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DirEtalon_descriptor_;
}

const DirEtalon& DirEtalon::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_p347_5fconf_2eproto();
  return *default_instance_;
}

DirEtalon* DirEtalon::default_instance_ = NULL;

DirEtalon* DirEtalon::New() const {
  return new DirEtalon;
}

void DirEtalon::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<DirEtalon*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(nmidlvalue_, nbeginmidlesp_);
    countmidlesp_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  level_.Clear();
  levelopt_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DirEtalon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p347_conf.DirEtalon)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 nMidlValue = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nmidlvalue_)));
          set_has_nmidlvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_nBeginMidleSp;
        break;
      }

      // required uint32 nBeginMidleSp = 2;
      case 2: {
        if (tag == 16) {
         parse_nBeginMidleSp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nbeginmidlesp_)));
          set_has_nbeginmidlesp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_CountMidleSp;
        break;
      }

      // required uint32 CountMidleSp = 3;
      case 3: {
        if (tag == 24) {
         parse_CountMidleSp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &countmidlesp_)));
          set_has_countmidlesp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_level;
        break;
      }

      // repeated double level = 4 [packed = true];
      case 4: {
        if (tag == 34) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_level())));
        } else if (tag == 33) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 34, input, this->mutable_level())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_levelOpt;
        break;
      }

      // repeated uint32 levelOpt = 5 [packed = true];
      case 5: {
        if (tag == 42) {
         parse_levelOpt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_levelopt())));
        } else if (tag == 40) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42, input, this->mutable_levelopt())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p347_conf.DirEtalon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p347_conf.DirEtalon)
  return false;
#undef DO_
}

void DirEtalon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p347_conf.DirEtalon)
  // required uint32 nMidlValue = 1;
  if (has_nmidlvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->nmidlvalue(), output);
  }

  // required uint32 nBeginMidleSp = 2;
  if (has_nbeginmidlesp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->nbeginmidlesp(), output);
  }

  // required uint32 CountMidleSp = 3;
  if (has_countmidlesp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->countmidlesp(), output);
  }

  // repeated double level = 4 [packed = true];
  if (this->level_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_level_cached_byte_size_);
  }
  for (int i = 0; i < this->level_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->level(i), output);
  }

  // repeated uint32 levelOpt = 5 [packed = true];
  if (this->levelopt_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_levelopt_cached_byte_size_);
  }
  for (int i = 0; i < this->levelopt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->levelopt(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:p347_conf.DirEtalon)
}

::google::protobuf::uint8* DirEtalon::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:p347_conf.DirEtalon)
  // required uint32 nMidlValue = 1;
  if (has_nmidlvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->nmidlvalue(), target);
  }

  // required uint32 nBeginMidleSp = 2;
  if (has_nbeginmidlesp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->nbeginmidlesp(), target);
  }

  // required uint32 CountMidleSp = 3;
  if (has_countmidlesp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->countmidlesp(), target);
  }

  // repeated double level = 4 [packed = true];
  if (this->level_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _level_cached_byte_size_, target);
  }
  for (int i = 0; i < this->level_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->level(i), target);
  }

  // repeated uint32 levelOpt = 5 [packed = true];
  if (this->levelopt_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _levelopt_cached_byte_size_, target);
  }
  for (int i = 0; i < this->levelopt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->levelopt(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p347_conf.DirEtalon)
  return target;
}

int DirEtalon::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 nMidlValue = 1;
    if (has_nmidlvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->nmidlvalue());
    }

    // required uint32 nBeginMidleSp = 2;
    if (has_nbeginmidlesp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->nbeginmidlesp());
    }

    // required uint32 CountMidleSp = 3;
    if (has_countmidlesp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->countmidlesp());
    }

  }
  // repeated double level = 4 [packed = true];
  {
    int data_size = 0;
    data_size = 8 * this->level_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _level_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 levelOpt = 5 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->levelopt_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->levelopt(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _levelopt_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DirEtalon::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DirEtalon* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DirEtalon*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DirEtalon::MergeFrom(const DirEtalon& from) {
  GOOGLE_CHECK_NE(&from, this);
  level_.MergeFrom(from.level_);
  levelopt_.MergeFrom(from.levelopt_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nmidlvalue()) {
      set_nmidlvalue(from.nmidlvalue());
    }
    if (from.has_nbeginmidlesp()) {
      set_nbeginmidlesp(from.nbeginmidlesp());
    }
    if (from.has_countmidlesp()) {
      set_countmidlesp(from.countmidlesp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DirEtalon::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DirEtalon::CopyFrom(const DirEtalon& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DirEtalon::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void DirEtalon::Swap(DirEtalon* other) {
  if (other != this) {
    std::swap(nmidlvalue_, other->nmidlvalue_);
    std::swap(nbeginmidlesp_, other->nbeginmidlesp_);
    std::swap(countmidlesp_, other->countmidlesp_);
    level_.Swap(&other->level_);
    levelopt_.Swap(&other->levelopt_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DirEtalon::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DirEtalon_descriptor_;
  metadata.reflection = DirEtalon_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int KdrEtalonData::kSIZEFieldNumber;
const int KdrEtalonData::kVersionFieldNumber;
const int KdrEtalonData::kMpTypeFieldNumber;
const int KdrEtalonData::kMpSubTypeFieldNumber;
const int KdrEtalonData::kDirEtalonFieldNumber;
const int KdrEtalonData::kEnvEtalonFieldNumber;
#endif  // !_MSC_VER

KdrEtalonData::KdrEtalonData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:p347_conf.KdrEtalonData)
}

void KdrEtalonData::InitAsDefaultInstance() {
  dir_etalon_ = const_cast< ::p347_conf::DirEtalon*>(&::p347_conf::DirEtalon::default_instance());
  env_etalon_ = const_cast< ::p347_conf::EnvEtalon*>(&::p347_conf::EnvEtalon::default_instance());
}

KdrEtalonData::KdrEtalonData(const KdrEtalonData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:p347_conf.KdrEtalonData)
}

void KdrEtalonData::SharedCtor() {
  _cached_size_ = 0;
  size_ = 0u;
  version_ = 0u;
  mptype_ = 0u;
  mpsubtype_ = 0u;
  dir_etalon_ = NULL;
  env_etalon_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

KdrEtalonData::~KdrEtalonData() {
  // @@protoc_insertion_point(destructor:p347_conf.KdrEtalonData)
  SharedDtor();
}

void KdrEtalonData::SharedDtor() {
  if (this != default_instance_) {
    delete dir_etalon_;
    delete env_etalon_;
  }
}

void KdrEtalonData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KdrEtalonData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KdrEtalonData_descriptor_;
}

const KdrEtalonData& KdrEtalonData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_p347_5fconf_2eproto();
  return *default_instance_;
}

KdrEtalonData* KdrEtalonData::default_instance_ = NULL;

KdrEtalonData* KdrEtalonData::New() const {
  return new KdrEtalonData;
}

void KdrEtalonData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<KdrEtalonData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(size_, mpsubtype_);
    if (has_dir_etalon()) {
      if (dir_etalon_ != NULL) dir_etalon_->::p347_conf::DirEtalon::Clear();
    }
    if (has_env_etalon()) {
      if (env_etalon_ != NULL) env_etalon_->::p347_conf::EnvEtalon::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool KdrEtalonData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p347_conf.KdrEtalonData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 SIZE = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &size_)));
          set_has_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_version;
        break;
      }

      // required uint32 version = 2;
      case 2: {
        if (tag == 16) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mpType;
        break;
      }

      // required uint32 mpType = 3;
      case 3: {
        if (tag == 24) {
         parse_mpType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mptype_)));
          set_has_mptype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_mpSubType;
        break;
      }

      // required uint32 mpSubType = 4;
      case 4: {
        if (tag == 32) {
         parse_mpSubType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mpsubtype_)));
          set_has_mpsubtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_dir_etalon;
        break;
      }

      // required .p347_conf.DirEtalon dir_etalon = 5;
      case 5: {
        if (tag == 42) {
         parse_dir_etalon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dir_etalon()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_env_etalon;
        break;
      }

      // required .p347_conf.EnvEtalon env_etalon = 6;
      case 6: {
        if (tag == 50) {
         parse_env_etalon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_env_etalon()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p347_conf.KdrEtalonData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p347_conf.KdrEtalonData)
  return false;
#undef DO_
}

void KdrEtalonData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p347_conf.KdrEtalonData)
  // required uint32 SIZE = 1;
  if (has_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->size(), output);
  }

  // required uint32 version = 2;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->version(), output);
  }

  // required uint32 mpType = 3;
  if (has_mptype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->mptype(), output);
  }

  // required uint32 mpSubType = 4;
  if (has_mpsubtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->mpsubtype(), output);
  }

  // required .p347_conf.DirEtalon dir_etalon = 5;
  if (has_dir_etalon()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->dir_etalon(), output);
  }

  // required .p347_conf.EnvEtalon env_etalon = 6;
  if (has_env_etalon()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->env_etalon(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:p347_conf.KdrEtalonData)
}

::google::protobuf::uint8* KdrEtalonData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:p347_conf.KdrEtalonData)
  // required uint32 SIZE = 1;
  if (has_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->size(), target);
  }

  // required uint32 version = 2;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->version(), target);
  }

  // required uint32 mpType = 3;
  if (has_mptype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->mptype(), target);
  }

  // required uint32 mpSubType = 4;
  if (has_mpsubtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->mpsubtype(), target);
  }

  // required .p347_conf.DirEtalon dir_etalon = 5;
  if (has_dir_etalon()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->dir_etalon(), target);
  }

  // required .p347_conf.EnvEtalon env_etalon = 6;
  if (has_env_etalon()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->env_etalon(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p347_conf.KdrEtalonData)
  return target;
}

int KdrEtalonData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 SIZE = 1;
    if (has_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->size());
    }

    // required uint32 version = 2;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // required uint32 mpType = 3;
    if (has_mptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mptype());
    }

    // required uint32 mpSubType = 4;
    if (has_mpsubtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mpsubtype());
    }

    // required .p347_conf.DirEtalon dir_etalon = 5;
    if (has_dir_etalon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dir_etalon());
    }

    // required .p347_conf.EnvEtalon env_etalon = 6;
    if (has_env_etalon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->env_etalon());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KdrEtalonData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const KdrEtalonData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const KdrEtalonData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void KdrEtalonData::MergeFrom(const KdrEtalonData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_size()) {
      set_size(from.size());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_mptype()) {
      set_mptype(from.mptype());
    }
    if (from.has_mpsubtype()) {
      set_mpsubtype(from.mpsubtype());
    }
    if (from.has_dir_etalon()) {
      mutable_dir_etalon()->::p347_conf::DirEtalon::MergeFrom(from.dir_etalon());
    }
    if (from.has_env_etalon()) {
      mutable_env_etalon()->::p347_conf::EnvEtalon::MergeFrom(from.env_etalon());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void KdrEtalonData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KdrEtalonData::CopyFrom(const KdrEtalonData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KdrEtalonData::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  if (has_dir_etalon()) {
    if (!this->dir_etalon().IsInitialized()) return false;
  }
  if (has_env_etalon()) {
    if (!this->env_etalon().IsInitialized()) return false;
  }
  return true;
}

void KdrEtalonData::Swap(KdrEtalonData* other) {
  if (other != this) {
    std::swap(size_, other->size_);
    std::swap(version_, other->version_);
    std::swap(mptype_, other->mptype_);
    std::swap(mpsubtype_, other->mpsubtype_);
    std::swap(dir_etalon_, other->dir_etalon_);
    std::swap(env_etalon_, other->env_etalon_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata KdrEtalonData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KdrEtalonData_descriptor_;
  metadata.reflection = KdrEtalonData_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace p347_conf

// @@protoc_insertion_point(global_scope)
